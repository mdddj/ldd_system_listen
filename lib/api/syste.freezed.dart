// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'syste.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#adding-getters-and-methods-to-our-models');

/// @nodoc
mixin _$LddButton {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() left,
    required TResult Function() right,
    required TResult Function() middle,
    required TResult Function(int field0) unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? left,
    TResult? Function()? right,
    TResult? Function()? middle,
    TResult? Function(int field0)? unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? left,
    TResult Function()? right,
    TResult Function()? middle,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddButton_Left value) left,
    required TResult Function(LddButton_Right value) right,
    required TResult Function(LddButton_Middle value) middle,
    required TResult Function(LddButton_Unknown value) unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddButton_Left value)? left,
    TResult? Function(LddButton_Right value)? right,
    TResult? Function(LddButton_Middle value)? middle,
    TResult? Function(LddButton_Unknown value)? unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddButton_Left value)? left,
    TResult Function(LddButton_Right value)? right,
    TResult Function(LddButton_Middle value)? middle,
    TResult Function(LddButton_Unknown value)? unknown,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $LddButtonCopyWith<$Res> {
  factory $LddButtonCopyWith(LddButton value, $Res Function(LddButton) then) =
      _$LddButtonCopyWithImpl<$Res, LddButton>;
}

/// @nodoc
class _$LddButtonCopyWithImpl<$Res, $Val extends LddButton>
    implements $LddButtonCopyWith<$Res> {
  _$LddButtonCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc
abstract class _$$LddButton_LeftImplCopyWith<$Res> {
  factory _$$LddButton_LeftImplCopyWith(_$LddButton_LeftImpl value,
          $Res Function(_$LddButton_LeftImpl) then) =
      __$$LddButton_LeftImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddButton_LeftImplCopyWithImpl<$Res>
    extends _$LddButtonCopyWithImpl<$Res, _$LddButton_LeftImpl>
    implements _$$LddButton_LeftImplCopyWith<$Res> {
  __$$LddButton_LeftImplCopyWithImpl(
      _$LddButton_LeftImpl _value, $Res Function(_$LddButton_LeftImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddButton_LeftImpl extends LddButton_Left {
  const _$LddButton_LeftImpl() : super._();

  @override
  String toString() {
    return 'LddButton.left()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddButton_LeftImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() left,
    required TResult Function() right,
    required TResult Function() middle,
    required TResult Function(int field0) unknown,
  }) {
    return left();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? left,
    TResult? Function()? right,
    TResult? Function()? middle,
    TResult? Function(int field0)? unknown,
  }) {
    return left?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? left,
    TResult Function()? right,
    TResult Function()? middle,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (left != null) {
      return left();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddButton_Left value) left,
    required TResult Function(LddButton_Right value) right,
    required TResult Function(LddButton_Middle value) middle,
    required TResult Function(LddButton_Unknown value) unknown,
  }) {
    return left(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddButton_Left value)? left,
    TResult? Function(LddButton_Right value)? right,
    TResult? Function(LddButton_Middle value)? middle,
    TResult? Function(LddButton_Unknown value)? unknown,
  }) {
    return left?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddButton_Left value)? left,
    TResult Function(LddButton_Right value)? right,
    TResult Function(LddButton_Middle value)? middle,
    TResult Function(LddButton_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (left != null) {
      return left(this);
    }
    return orElse();
  }
}

abstract class LddButton_Left extends LddButton {
  const factory LddButton_Left() = _$LddButton_LeftImpl;
  const LddButton_Left._() : super._();
}

/// @nodoc
abstract class _$$LddButton_RightImplCopyWith<$Res> {
  factory _$$LddButton_RightImplCopyWith(_$LddButton_RightImpl value,
          $Res Function(_$LddButton_RightImpl) then) =
      __$$LddButton_RightImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddButton_RightImplCopyWithImpl<$Res>
    extends _$LddButtonCopyWithImpl<$Res, _$LddButton_RightImpl>
    implements _$$LddButton_RightImplCopyWith<$Res> {
  __$$LddButton_RightImplCopyWithImpl(
      _$LddButton_RightImpl _value, $Res Function(_$LddButton_RightImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddButton_RightImpl extends LddButton_Right {
  const _$LddButton_RightImpl() : super._();

  @override
  String toString() {
    return 'LddButton.right()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddButton_RightImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() left,
    required TResult Function() right,
    required TResult Function() middle,
    required TResult Function(int field0) unknown,
  }) {
    return right();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? left,
    TResult? Function()? right,
    TResult? Function()? middle,
    TResult? Function(int field0)? unknown,
  }) {
    return right?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? left,
    TResult Function()? right,
    TResult Function()? middle,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (right != null) {
      return right();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddButton_Left value) left,
    required TResult Function(LddButton_Right value) right,
    required TResult Function(LddButton_Middle value) middle,
    required TResult Function(LddButton_Unknown value) unknown,
  }) {
    return right(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddButton_Left value)? left,
    TResult? Function(LddButton_Right value)? right,
    TResult? Function(LddButton_Middle value)? middle,
    TResult? Function(LddButton_Unknown value)? unknown,
  }) {
    return right?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddButton_Left value)? left,
    TResult Function(LddButton_Right value)? right,
    TResult Function(LddButton_Middle value)? middle,
    TResult Function(LddButton_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (right != null) {
      return right(this);
    }
    return orElse();
  }
}

abstract class LddButton_Right extends LddButton {
  const factory LddButton_Right() = _$LddButton_RightImpl;
  const LddButton_Right._() : super._();
}

/// @nodoc
abstract class _$$LddButton_MiddleImplCopyWith<$Res> {
  factory _$$LddButton_MiddleImplCopyWith(_$LddButton_MiddleImpl value,
          $Res Function(_$LddButton_MiddleImpl) then) =
      __$$LddButton_MiddleImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddButton_MiddleImplCopyWithImpl<$Res>
    extends _$LddButtonCopyWithImpl<$Res, _$LddButton_MiddleImpl>
    implements _$$LddButton_MiddleImplCopyWith<$Res> {
  __$$LddButton_MiddleImplCopyWithImpl(_$LddButton_MiddleImpl _value,
      $Res Function(_$LddButton_MiddleImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddButton_MiddleImpl extends LddButton_Middle {
  const _$LddButton_MiddleImpl() : super._();

  @override
  String toString() {
    return 'LddButton.middle()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddButton_MiddleImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() left,
    required TResult Function() right,
    required TResult Function() middle,
    required TResult Function(int field0) unknown,
  }) {
    return middle();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? left,
    TResult? Function()? right,
    TResult? Function()? middle,
    TResult? Function(int field0)? unknown,
  }) {
    return middle?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? left,
    TResult Function()? right,
    TResult Function()? middle,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (middle != null) {
      return middle();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddButton_Left value) left,
    required TResult Function(LddButton_Right value) right,
    required TResult Function(LddButton_Middle value) middle,
    required TResult Function(LddButton_Unknown value) unknown,
  }) {
    return middle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddButton_Left value)? left,
    TResult? Function(LddButton_Right value)? right,
    TResult? Function(LddButton_Middle value)? middle,
    TResult? Function(LddButton_Unknown value)? unknown,
  }) {
    return middle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddButton_Left value)? left,
    TResult Function(LddButton_Right value)? right,
    TResult Function(LddButton_Middle value)? middle,
    TResult Function(LddButton_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (middle != null) {
      return middle(this);
    }
    return orElse();
  }
}

abstract class LddButton_Middle extends LddButton {
  const factory LddButton_Middle() = _$LddButton_MiddleImpl;
  const LddButton_Middle._() : super._();
}

/// @nodoc
abstract class _$$LddButton_UnknownImplCopyWith<$Res> {
  factory _$$LddButton_UnknownImplCopyWith(_$LddButton_UnknownImpl value,
          $Res Function(_$LddButton_UnknownImpl) then) =
      __$$LddButton_UnknownImplCopyWithImpl<$Res>;
  @useResult
  $Res call({int field0});
}

/// @nodoc
class __$$LddButton_UnknownImplCopyWithImpl<$Res>
    extends _$LddButtonCopyWithImpl<$Res, _$LddButton_UnknownImpl>
    implements _$$LddButton_UnknownImplCopyWith<$Res> {
  __$$LddButton_UnknownImplCopyWithImpl(_$LddButton_UnknownImpl _value,
      $Res Function(_$LddButton_UnknownImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LddButton_UnknownImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$LddButton_UnknownImpl extends LddButton_Unknown {
  const _$LddButton_UnknownImpl(this.field0) : super._();

  @override
  final int field0;

  @override
  String toString() {
    return 'LddButton.unknown(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddButton_UnknownImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddButton_UnknownImplCopyWith<_$LddButton_UnknownImpl> get copyWith =>
      __$$LddButton_UnknownImplCopyWithImpl<_$LddButton_UnknownImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() left,
    required TResult Function() right,
    required TResult Function() middle,
    required TResult Function(int field0) unknown,
  }) {
    return unknown(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? left,
    TResult? Function()? right,
    TResult? Function()? middle,
    TResult? Function(int field0)? unknown,
  }) {
    return unknown?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? left,
    TResult Function()? right,
    TResult Function()? middle,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (unknown != null) {
      return unknown(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddButton_Left value) left,
    required TResult Function(LddButton_Right value) right,
    required TResult Function(LddButton_Middle value) middle,
    required TResult Function(LddButton_Unknown value) unknown,
  }) {
    return unknown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddButton_Left value)? left,
    TResult? Function(LddButton_Right value)? right,
    TResult? Function(LddButton_Middle value)? middle,
    TResult? Function(LddButton_Unknown value)? unknown,
  }) {
    return unknown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddButton_Left value)? left,
    TResult Function(LddButton_Right value)? right,
    TResult Function(LddButton_Middle value)? middle,
    TResult Function(LddButton_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (unknown != null) {
      return unknown(this);
    }
    return orElse();
  }
}

abstract class LddButton_Unknown extends LddButton {
  const factory LddButton_Unknown(final int field0) = _$LddButton_UnknownImpl;
  const LddButton_Unknown._() : super._();

  int get field0;

  /// Create a copy of LddButton
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddButton_UnknownImplCopyWith<_$LddButton_UnknownImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
mixin _$LddEventType {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $LddEventTypeCopyWith<$Res> {
  factory $LddEventTypeCopyWith(
          LddEventType value, $Res Function(LddEventType) then) =
      _$LddEventTypeCopyWithImpl<$Res, LddEventType>;
}

/// @nodoc
class _$LddEventTypeCopyWithImpl<$Res, $Val extends LddEventType>
    implements $LddEventTypeCopyWith<$Res> {
  _$LddEventTypeCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc
abstract class _$$LddEventType_KeyPressImplCopyWith<$Res> {
  factory _$$LddEventType_KeyPressImplCopyWith(
          _$LddEventType_KeyPressImpl value,
          $Res Function(_$LddEventType_KeyPressImpl) then) =
      __$$LddEventType_KeyPressImplCopyWithImpl<$Res>;
  @useResult
  $Res call({LddKey field0});

  $LddKeyCopyWith<$Res> get field0;
}

/// @nodoc
class __$$LddEventType_KeyPressImplCopyWithImpl<$Res>
    extends _$LddEventTypeCopyWithImpl<$Res, _$LddEventType_KeyPressImpl>
    implements _$$LddEventType_KeyPressImplCopyWith<$Res> {
  __$$LddEventType_KeyPressImplCopyWithImpl(_$LddEventType_KeyPressImpl _value,
      $Res Function(_$LddEventType_KeyPressImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LddEventType_KeyPressImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as LddKey,
    ));
  }

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @override
  @pragma('vm:prefer-inline')
  $LddKeyCopyWith<$Res> get field0 {
    return $LddKeyCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$LddEventType_KeyPressImpl extends LddEventType_KeyPress {
  const _$LddEventType_KeyPressImpl(this.field0) : super._();

  @override
  final LddKey field0;

  @override
  String toString() {
    return 'LddEventType.keyPress(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddEventType_KeyPressImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddEventType_KeyPressImplCopyWith<_$LddEventType_KeyPressImpl>
      get copyWith => __$$LddEventType_KeyPressImplCopyWithImpl<
          _$LddEventType_KeyPressImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) {
    return keyPress(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) {
    return keyPress?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) {
    if (keyPress != null) {
      return keyPress(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) {
    return keyPress(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) {
    return keyPress?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) {
    if (keyPress != null) {
      return keyPress(this);
    }
    return orElse();
  }
}

abstract class LddEventType_KeyPress extends LddEventType {
  const factory LddEventType_KeyPress(final LddKey field0) =
      _$LddEventType_KeyPressImpl;
  const LddEventType_KeyPress._() : super._();

  LddKey get field0;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddEventType_KeyPressImplCopyWith<_$LddEventType_KeyPressImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LddEventType_KeyReleaseImplCopyWith<$Res> {
  factory _$$LddEventType_KeyReleaseImplCopyWith(
          _$LddEventType_KeyReleaseImpl value,
          $Res Function(_$LddEventType_KeyReleaseImpl) then) =
      __$$LddEventType_KeyReleaseImplCopyWithImpl<$Res>;
  @useResult
  $Res call({LddKey field0});

  $LddKeyCopyWith<$Res> get field0;
}

/// @nodoc
class __$$LddEventType_KeyReleaseImplCopyWithImpl<$Res>
    extends _$LddEventTypeCopyWithImpl<$Res, _$LddEventType_KeyReleaseImpl>
    implements _$$LddEventType_KeyReleaseImplCopyWith<$Res> {
  __$$LddEventType_KeyReleaseImplCopyWithImpl(
      _$LddEventType_KeyReleaseImpl _value,
      $Res Function(_$LddEventType_KeyReleaseImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LddEventType_KeyReleaseImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as LddKey,
    ));
  }

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @override
  @pragma('vm:prefer-inline')
  $LddKeyCopyWith<$Res> get field0 {
    return $LddKeyCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$LddEventType_KeyReleaseImpl extends LddEventType_KeyRelease {
  const _$LddEventType_KeyReleaseImpl(this.field0) : super._();

  @override
  final LddKey field0;

  @override
  String toString() {
    return 'LddEventType.keyRelease(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddEventType_KeyReleaseImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddEventType_KeyReleaseImplCopyWith<_$LddEventType_KeyReleaseImpl>
      get copyWith => __$$LddEventType_KeyReleaseImplCopyWithImpl<
          _$LddEventType_KeyReleaseImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) {
    return keyRelease(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) {
    return keyRelease?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) {
    if (keyRelease != null) {
      return keyRelease(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) {
    return keyRelease(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) {
    return keyRelease?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) {
    if (keyRelease != null) {
      return keyRelease(this);
    }
    return orElse();
  }
}

abstract class LddEventType_KeyRelease extends LddEventType {
  const factory LddEventType_KeyRelease(final LddKey field0) =
      _$LddEventType_KeyReleaseImpl;
  const LddEventType_KeyRelease._() : super._();

  LddKey get field0;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddEventType_KeyReleaseImplCopyWith<_$LddEventType_KeyReleaseImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LddEventType_ButtonPressImplCopyWith<$Res> {
  factory _$$LddEventType_ButtonPressImplCopyWith(
          _$LddEventType_ButtonPressImpl value,
          $Res Function(_$LddEventType_ButtonPressImpl) then) =
      __$$LddEventType_ButtonPressImplCopyWithImpl<$Res>;
  @useResult
  $Res call({LddButton field0});

  $LddButtonCopyWith<$Res> get field0;
}

/// @nodoc
class __$$LddEventType_ButtonPressImplCopyWithImpl<$Res>
    extends _$LddEventTypeCopyWithImpl<$Res, _$LddEventType_ButtonPressImpl>
    implements _$$LddEventType_ButtonPressImplCopyWith<$Res> {
  __$$LddEventType_ButtonPressImplCopyWithImpl(
      _$LddEventType_ButtonPressImpl _value,
      $Res Function(_$LddEventType_ButtonPressImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LddEventType_ButtonPressImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as LddButton,
    ));
  }

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @override
  @pragma('vm:prefer-inline')
  $LddButtonCopyWith<$Res> get field0 {
    return $LddButtonCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$LddEventType_ButtonPressImpl extends LddEventType_ButtonPress {
  const _$LddEventType_ButtonPressImpl(this.field0) : super._();

  @override
  final LddButton field0;

  @override
  String toString() {
    return 'LddEventType.buttonPress(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddEventType_ButtonPressImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddEventType_ButtonPressImplCopyWith<_$LddEventType_ButtonPressImpl>
      get copyWith => __$$LddEventType_ButtonPressImplCopyWithImpl<
          _$LddEventType_ButtonPressImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) {
    return buttonPress(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) {
    return buttonPress?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) {
    if (buttonPress != null) {
      return buttonPress(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) {
    return buttonPress(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) {
    return buttonPress?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) {
    if (buttonPress != null) {
      return buttonPress(this);
    }
    return orElse();
  }
}

abstract class LddEventType_ButtonPress extends LddEventType {
  const factory LddEventType_ButtonPress(final LddButton field0) =
      _$LddEventType_ButtonPressImpl;
  const LddEventType_ButtonPress._() : super._();

  LddButton get field0;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddEventType_ButtonPressImplCopyWith<_$LddEventType_ButtonPressImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LddEventType_ButtonReleaseImplCopyWith<$Res> {
  factory _$$LddEventType_ButtonReleaseImplCopyWith(
          _$LddEventType_ButtonReleaseImpl value,
          $Res Function(_$LddEventType_ButtonReleaseImpl) then) =
      __$$LddEventType_ButtonReleaseImplCopyWithImpl<$Res>;
  @useResult
  $Res call({LddButton field0});

  $LddButtonCopyWith<$Res> get field0;
}

/// @nodoc
class __$$LddEventType_ButtonReleaseImplCopyWithImpl<$Res>
    extends _$LddEventTypeCopyWithImpl<$Res, _$LddEventType_ButtonReleaseImpl>
    implements _$$LddEventType_ButtonReleaseImplCopyWith<$Res> {
  __$$LddEventType_ButtonReleaseImplCopyWithImpl(
      _$LddEventType_ButtonReleaseImpl _value,
      $Res Function(_$LddEventType_ButtonReleaseImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LddEventType_ButtonReleaseImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as LddButton,
    ));
  }

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @override
  @pragma('vm:prefer-inline')
  $LddButtonCopyWith<$Res> get field0 {
    return $LddButtonCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$LddEventType_ButtonReleaseImpl extends LddEventType_ButtonRelease {
  const _$LddEventType_ButtonReleaseImpl(this.field0) : super._();

  @override
  final LddButton field0;

  @override
  String toString() {
    return 'LddEventType.buttonRelease(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddEventType_ButtonReleaseImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddEventType_ButtonReleaseImplCopyWith<_$LddEventType_ButtonReleaseImpl>
      get copyWith => __$$LddEventType_ButtonReleaseImplCopyWithImpl<
          _$LddEventType_ButtonReleaseImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) {
    return buttonRelease(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) {
    return buttonRelease?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) {
    if (buttonRelease != null) {
      return buttonRelease(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) {
    return buttonRelease(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) {
    return buttonRelease?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) {
    if (buttonRelease != null) {
      return buttonRelease(this);
    }
    return orElse();
  }
}

abstract class LddEventType_ButtonRelease extends LddEventType {
  const factory LddEventType_ButtonRelease(final LddButton field0) =
      _$LddEventType_ButtonReleaseImpl;
  const LddEventType_ButtonRelease._() : super._();

  LddButton get field0;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddEventType_ButtonReleaseImplCopyWith<_$LddEventType_ButtonReleaseImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LddEventType_MouseMoveImplCopyWith<$Res> {
  factory _$$LddEventType_MouseMoveImplCopyWith(
          _$LddEventType_MouseMoveImpl value,
          $Res Function(_$LddEventType_MouseMoveImpl) then) =
      __$$LddEventType_MouseMoveImplCopyWithImpl<$Res>;
  @useResult
  $Res call({double x, double y});
}

/// @nodoc
class __$$LddEventType_MouseMoveImplCopyWithImpl<$Res>
    extends _$LddEventTypeCopyWithImpl<$Res, _$LddEventType_MouseMoveImpl>
    implements _$$LddEventType_MouseMoveImplCopyWith<$Res> {
  __$$LddEventType_MouseMoveImplCopyWithImpl(
      _$LddEventType_MouseMoveImpl _value,
      $Res Function(_$LddEventType_MouseMoveImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? x = null,
    Object? y = null,
  }) {
    return _then(_$LddEventType_MouseMoveImpl(
      x: null == x
          ? _value.x
          : x // ignore: cast_nullable_to_non_nullable
              as double,
      y: null == y
          ? _value.y
          : y // ignore: cast_nullable_to_non_nullable
              as double,
    ));
  }
}

/// @nodoc

class _$LddEventType_MouseMoveImpl extends LddEventType_MouseMove {
  const _$LddEventType_MouseMoveImpl({required this.x, required this.y})
      : super._();

  @override
  final double x;
  @override
  final double y;

  @override
  String toString() {
    return 'LddEventType.mouseMove(x: $x, y: $y)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddEventType_MouseMoveImpl &&
            (identical(other.x, x) || other.x == x) &&
            (identical(other.y, y) || other.y == y));
  }

  @override
  int get hashCode => Object.hash(runtimeType, x, y);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddEventType_MouseMoveImplCopyWith<_$LddEventType_MouseMoveImpl>
      get copyWith => __$$LddEventType_MouseMoveImplCopyWithImpl<
          _$LddEventType_MouseMoveImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) {
    return mouseMove(x, y);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) {
    return mouseMove?.call(x, y);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) {
    if (mouseMove != null) {
      return mouseMove(x, y);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) {
    return mouseMove(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) {
    return mouseMove?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) {
    if (mouseMove != null) {
      return mouseMove(this);
    }
    return orElse();
  }
}

abstract class LddEventType_MouseMove extends LddEventType {
  const factory LddEventType_MouseMove(
      {required final double x,
      required final double y}) = _$LddEventType_MouseMoveImpl;
  const LddEventType_MouseMove._() : super._();

  double get x;
  double get y;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddEventType_MouseMoveImplCopyWith<_$LddEventType_MouseMoveImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LddEventType_WheelImplCopyWith<$Res> {
  factory _$$LddEventType_WheelImplCopyWith(_$LddEventType_WheelImpl value,
          $Res Function(_$LddEventType_WheelImpl) then) =
      __$$LddEventType_WheelImplCopyWithImpl<$Res>;
  @useResult
  $Res call({int deltaX, int deltaY});
}

/// @nodoc
class __$$LddEventType_WheelImplCopyWithImpl<$Res>
    extends _$LddEventTypeCopyWithImpl<$Res, _$LddEventType_WheelImpl>
    implements _$$LddEventType_WheelImplCopyWith<$Res> {
  __$$LddEventType_WheelImplCopyWithImpl(_$LddEventType_WheelImpl _value,
      $Res Function(_$LddEventType_WheelImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? deltaX = null,
    Object? deltaY = null,
  }) {
    return _then(_$LddEventType_WheelImpl(
      deltaX: null == deltaX
          ? _value.deltaX
          : deltaX // ignore: cast_nullable_to_non_nullable
              as int,
      deltaY: null == deltaY
          ? _value.deltaY
          : deltaY // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$LddEventType_WheelImpl extends LddEventType_Wheel {
  const _$LddEventType_WheelImpl({required this.deltaX, required this.deltaY})
      : super._();

  @override
  final int deltaX;
  @override
  final int deltaY;

  @override
  String toString() {
    return 'LddEventType.wheel(deltaX: $deltaX, deltaY: $deltaY)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddEventType_WheelImpl &&
            (identical(other.deltaX, deltaX) || other.deltaX == deltaX) &&
            (identical(other.deltaY, deltaY) || other.deltaY == deltaY));
  }

  @override
  int get hashCode => Object.hash(runtimeType, deltaX, deltaY);

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddEventType_WheelImplCopyWith<_$LddEventType_WheelImpl> get copyWith =>
      __$$LddEventType_WheelImplCopyWithImpl<_$LddEventType_WheelImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(LddKey field0) keyPress,
    required TResult Function(LddKey field0) keyRelease,
    required TResult Function(LddButton field0) buttonPress,
    required TResult Function(LddButton field0) buttonRelease,
    required TResult Function(double x, double y) mouseMove,
    required TResult Function(int deltaX, int deltaY) wheel,
  }) {
    return wheel(deltaX, deltaY);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(LddKey field0)? keyPress,
    TResult? Function(LddKey field0)? keyRelease,
    TResult? Function(LddButton field0)? buttonPress,
    TResult? Function(LddButton field0)? buttonRelease,
    TResult? Function(double x, double y)? mouseMove,
    TResult? Function(int deltaX, int deltaY)? wheel,
  }) {
    return wheel?.call(deltaX, deltaY);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(LddKey field0)? keyPress,
    TResult Function(LddKey field0)? keyRelease,
    TResult Function(LddButton field0)? buttonPress,
    TResult Function(LddButton field0)? buttonRelease,
    TResult Function(double x, double y)? mouseMove,
    TResult Function(int deltaX, int deltaY)? wheel,
    required TResult orElse(),
  }) {
    if (wheel != null) {
      return wheel(deltaX, deltaY);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddEventType_KeyPress value) keyPress,
    required TResult Function(LddEventType_KeyRelease value) keyRelease,
    required TResult Function(LddEventType_ButtonPress value) buttonPress,
    required TResult Function(LddEventType_ButtonRelease value) buttonRelease,
    required TResult Function(LddEventType_MouseMove value) mouseMove,
    required TResult Function(LddEventType_Wheel value) wheel,
  }) {
    return wheel(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddEventType_KeyPress value)? keyPress,
    TResult? Function(LddEventType_KeyRelease value)? keyRelease,
    TResult? Function(LddEventType_ButtonPress value)? buttonPress,
    TResult? Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult? Function(LddEventType_MouseMove value)? mouseMove,
    TResult? Function(LddEventType_Wheel value)? wheel,
  }) {
    return wheel?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddEventType_KeyPress value)? keyPress,
    TResult Function(LddEventType_KeyRelease value)? keyRelease,
    TResult Function(LddEventType_ButtonPress value)? buttonPress,
    TResult Function(LddEventType_ButtonRelease value)? buttonRelease,
    TResult Function(LddEventType_MouseMove value)? mouseMove,
    TResult Function(LddEventType_Wheel value)? wheel,
    required TResult orElse(),
  }) {
    if (wheel != null) {
      return wheel(this);
    }
    return orElse();
  }
}

abstract class LddEventType_Wheel extends LddEventType {
  const factory LddEventType_Wheel(
      {required final int deltaX,
      required final int deltaY}) = _$LddEventType_WheelImpl;
  const LddEventType_Wheel._() : super._();

  int get deltaX;
  int get deltaY;

  /// Create a copy of LddEventType
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddEventType_WheelImplCopyWith<_$LddEventType_WheelImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
mixin _$LddKey {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $LddKeyCopyWith<$Res> {
  factory $LddKeyCopyWith(LddKey value, $Res Function(LddKey) then) =
      _$LddKeyCopyWithImpl<$Res, LddKey>;
}

/// @nodoc
class _$LddKeyCopyWithImpl<$Res, $Val extends LddKey>
    implements $LddKeyCopyWith<$Res> {
  _$LddKeyCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc
abstract class _$$LddKey_AltImplCopyWith<$Res> {
  factory _$$LddKey_AltImplCopyWith(
          _$LddKey_AltImpl value, $Res Function(_$LddKey_AltImpl) then) =
      __$$LddKey_AltImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_AltImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_AltImpl>
    implements _$$LddKey_AltImplCopyWith<$Res> {
  __$$LddKey_AltImplCopyWithImpl(
      _$LddKey_AltImpl _value, $Res Function(_$LddKey_AltImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_AltImpl extends LddKey_Alt {
  const _$LddKey_AltImpl() : super._();

  @override
  String toString() {
    return 'LddKey.alt()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_AltImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return alt();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return alt?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (alt != null) {
      return alt();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return alt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return alt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (alt != null) {
      return alt(this);
    }
    return orElse();
  }
}

abstract class LddKey_Alt extends LddKey {
  const factory LddKey_Alt() = _$LddKey_AltImpl;
  const LddKey_Alt._() : super._();
}

/// @nodoc
abstract class _$$LddKey_AltGrImplCopyWith<$Res> {
  factory _$$LddKey_AltGrImplCopyWith(
          _$LddKey_AltGrImpl value, $Res Function(_$LddKey_AltGrImpl) then) =
      __$$LddKey_AltGrImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_AltGrImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_AltGrImpl>
    implements _$$LddKey_AltGrImplCopyWith<$Res> {
  __$$LddKey_AltGrImplCopyWithImpl(
      _$LddKey_AltGrImpl _value, $Res Function(_$LddKey_AltGrImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_AltGrImpl extends LddKey_AltGr {
  const _$LddKey_AltGrImpl() : super._();

  @override
  String toString() {
    return 'LddKey.altGr()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_AltGrImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return altGr();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return altGr?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (altGr != null) {
      return altGr();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return altGr(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return altGr?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (altGr != null) {
      return altGr(this);
    }
    return orElse();
  }
}

abstract class LddKey_AltGr extends LddKey {
  const factory LddKey_AltGr() = _$LddKey_AltGrImpl;
  const LddKey_AltGr._() : super._();
}

/// @nodoc
abstract class _$$LddKey_BackspaceImplCopyWith<$Res> {
  factory _$$LddKey_BackspaceImplCopyWith(_$LddKey_BackspaceImpl value,
          $Res Function(_$LddKey_BackspaceImpl) then) =
      __$$LddKey_BackspaceImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_BackspaceImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_BackspaceImpl>
    implements _$$LddKey_BackspaceImplCopyWith<$Res> {
  __$$LddKey_BackspaceImplCopyWithImpl(_$LddKey_BackspaceImpl _value,
      $Res Function(_$LddKey_BackspaceImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_BackspaceImpl extends LddKey_Backspace {
  const _$LddKey_BackspaceImpl() : super._();

  @override
  String toString() {
    return 'LddKey.backspace()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_BackspaceImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return backspace();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return backspace?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (backspace != null) {
      return backspace();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return backspace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return backspace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (backspace != null) {
      return backspace(this);
    }
    return orElse();
  }
}

abstract class LddKey_Backspace extends LddKey {
  const factory LddKey_Backspace() = _$LddKey_BackspaceImpl;
  const LddKey_Backspace._() : super._();
}

/// @nodoc
abstract class _$$LddKey_CapsLockImplCopyWith<$Res> {
  factory _$$LddKey_CapsLockImplCopyWith(_$LddKey_CapsLockImpl value,
          $Res Function(_$LddKey_CapsLockImpl) then) =
      __$$LddKey_CapsLockImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_CapsLockImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_CapsLockImpl>
    implements _$$LddKey_CapsLockImplCopyWith<$Res> {
  __$$LddKey_CapsLockImplCopyWithImpl(
      _$LddKey_CapsLockImpl _value, $Res Function(_$LddKey_CapsLockImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_CapsLockImpl extends LddKey_CapsLock {
  const _$LddKey_CapsLockImpl() : super._();

  @override
  String toString() {
    return 'LddKey.capsLock()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_CapsLockImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return capsLock();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return capsLock?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (capsLock != null) {
      return capsLock();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return capsLock(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return capsLock?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (capsLock != null) {
      return capsLock(this);
    }
    return orElse();
  }
}

abstract class LddKey_CapsLock extends LddKey {
  const factory LddKey_CapsLock() = _$LddKey_CapsLockImpl;
  const LddKey_CapsLock._() : super._();
}

/// @nodoc
abstract class _$$LddKey_ControlLeftImplCopyWith<$Res> {
  factory _$$LddKey_ControlLeftImplCopyWith(_$LddKey_ControlLeftImpl value,
          $Res Function(_$LddKey_ControlLeftImpl) then) =
      __$$LddKey_ControlLeftImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_ControlLeftImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_ControlLeftImpl>
    implements _$$LddKey_ControlLeftImplCopyWith<$Res> {
  __$$LddKey_ControlLeftImplCopyWithImpl(_$LddKey_ControlLeftImpl _value,
      $Res Function(_$LddKey_ControlLeftImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_ControlLeftImpl extends LddKey_ControlLeft {
  const _$LddKey_ControlLeftImpl() : super._();

  @override
  String toString() {
    return 'LddKey.controlLeft()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_ControlLeftImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return controlLeft();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return controlLeft?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (controlLeft != null) {
      return controlLeft();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return controlLeft(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return controlLeft?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (controlLeft != null) {
      return controlLeft(this);
    }
    return orElse();
  }
}

abstract class LddKey_ControlLeft extends LddKey {
  const factory LddKey_ControlLeft() = _$LddKey_ControlLeftImpl;
  const LddKey_ControlLeft._() : super._();
}

/// @nodoc
abstract class _$$LddKey_ControlRightImplCopyWith<$Res> {
  factory _$$LddKey_ControlRightImplCopyWith(_$LddKey_ControlRightImpl value,
          $Res Function(_$LddKey_ControlRightImpl) then) =
      __$$LddKey_ControlRightImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_ControlRightImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_ControlRightImpl>
    implements _$$LddKey_ControlRightImplCopyWith<$Res> {
  __$$LddKey_ControlRightImplCopyWithImpl(_$LddKey_ControlRightImpl _value,
      $Res Function(_$LddKey_ControlRightImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_ControlRightImpl extends LddKey_ControlRight {
  const _$LddKey_ControlRightImpl() : super._();

  @override
  String toString() {
    return 'LddKey.controlRight()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddKey_ControlRightImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return controlRight();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return controlRight?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (controlRight != null) {
      return controlRight();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return controlRight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return controlRight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (controlRight != null) {
      return controlRight(this);
    }
    return orElse();
  }
}

abstract class LddKey_ControlRight extends LddKey {
  const factory LddKey_ControlRight() = _$LddKey_ControlRightImpl;
  const LddKey_ControlRight._() : super._();
}

/// @nodoc
abstract class _$$LddKey_DeleteImplCopyWith<$Res> {
  factory _$$LddKey_DeleteImplCopyWith(
          _$LddKey_DeleteImpl value, $Res Function(_$LddKey_DeleteImpl) then) =
      __$$LddKey_DeleteImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_DeleteImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_DeleteImpl>
    implements _$$LddKey_DeleteImplCopyWith<$Res> {
  __$$LddKey_DeleteImplCopyWithImpl(
      _$LddKey_DeleteImpl _value, $Res Function(_$LddKey_DeleteImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_DeleteImpl extends LddKey_Delete {
  const _$LddKey_DeleteImpl() : super._();

  @override
  String toString() {
    return 'LddKey.delete()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_DeleteImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return delete();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return delete?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (delete != null) {
      return delete();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return delete(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return delete?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (delete != null) {
      return delete(this);
    }
    return orElse();
  }
}

abstract class LddKey_Delete extends LddKey {
  const factory LddKey_Delete() = _$LddKey_DeleteImpl;
  const LddKey_Delete._() : super._();
}

/// @nodoc
abstract class _$$LddKey_DownArrowImplCopyWith<$Res> {
  factory _$$LddKey_DownArrowImplCopyWith(_$LddKey_DownArrowImpl value,
          $Res Function(_$LddKey_DownArrowImpl) then) =
      __$$LddKey_DownArrowImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_DownArrowImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_DownArrowImpl>
    implements _$$LddKey_DownArrowImplCopyWith<$Res> {
  __$$LddKey_DownArrowImplCopyWithImpl(_$LddKey_DownArrowImpl _value,
      $Res Function(_$LddKey_DownArrowImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_DownArrowImpl extends LddKey_DownArrow {
  const _$LddKey_DownArrowImpl() : super._();

  @override
  String toString() {
    return 'LddKey.downArrow()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_DownArrowImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return downArrow();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return downArrow?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (downArrow != null) {
      return downArrow();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return downArrow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return downArrow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (downArrow != null) {
      return downArrow(this);
    }
    return orElse();
  }
}

abstract class LddKey_DownArrow extends LddKey {
  const factory LddKey_DownArrow() = _$LddKey_DownArrowImpl;
  const LddKey_DownArrow._() : super._();
}

/// @nodoc
abstract class _$$LddKey_EndImplCopyWith<$Res> {
  factory _$$LddKey_EndImplCopyWith(
          _$LddKey_EndImpl value, $Res Function(_$LddKey_EndImpl) then) =
      __$$LddKey_EndImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_EndImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_EndImpl>
    implements _$$LddKey_EndImplCopyWith<$Res> {
  __$$LddKey_EndImplCopyWithImpl(
      _$LddKey_EndImpl _value, $Res Function(_$LddKey_EndImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_EndImpl extends LddKey_End {
  const _$LddKey_EndImpl() : super._();

  @override
  String toString() {
    return 'LddKey.end()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_EndImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return end();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return end?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (end != null) {
      return end();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return end(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return end?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (end != null) {
      return end(this);
    }
    return orElse();
  }
}

abstract class LddKey_End extends LddKey {
  const factory LddKey_End() = _$LddKey_EndImpl;
  const LddKey_End._() : super._();
}

/// @nodoc
abstract class _$$LddKey_EscapeImplCopyWith<$Res> {
  factory _$$LddKey_EscapeImplCopyWith(
          _$LddKey_EscapeImpl value, $Res Function(_$LddKey_EscapeImpl) then) =
      __$$LddKey_EscapeImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_EscapeImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_EscapeImpl>
    implements _$$LddKey_EscapeImplCopyWith<$Res> {
  __$$LddKey_EscapeImplCopyWithImpl(
      _$LddKey_EscapeImpl _value, $Res Function(_$LddKey_EscapeImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_EscapeImpl extends LddKey_Escape {
  const _$LddKey_EscapeImpl() : super._();

  @override
  String toString() {
    return 'LddKey.escape()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_EscapeImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return escape();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return escape?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (escape != null) {
      return escape();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return escape(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return escape?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (escape != null) {
      return escape(this);
    }
    return orElse();
  }
}

abstract class LddKey_Escape extends LddKey {
  const factory LddKey_Escape() = _$LddKey_EscapeImpl;
  const LddKey_Escape._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F1ImplCopyWith<$Res> {
  factory _$$LddKey_F1ImplCopyWith(
          _$LddKey_F1Impl value, $Res Function(_$LddKey_F1Impl) then) =
      __$$LddKey_F1ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F1ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F1Impl>
    implements _$$LddKey_F1ImplCopyWith<$Res> {
  __$$LddKey_F1ImplCopyWithImpl(
      _$LddKey_F1Impl _value, $Res Function(_$LddKey_F1Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F1Impl extends LddKey_F1 {
  const _$LddKey_F1Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f1()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F1Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f1();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f1?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f1 != null) {
      return f1();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f1(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f1?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f1 != null) {
      return f1(this);
    }
    return orElse();
  }
}

abstract class LddKey_F1 extends LddKey {
  const factory LddKey_F1() = _$LddKey_F1Impl;
  const LddKey_F1._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F10ImplCopyWith<$Res> {
  factory _$$LddKey_F10ImplCopyWith(
          _$LddKey_F10Impl value, $Res Function(_$LddKey_F10Impl) then) =
      __$$LddKey_F10ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F10ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F10Impl>
    implements _$$LddKey_F10ImplCopyWith<$Res> {
  __$$LddKey_F10ImplCopyWithImpl(
      _$LddKey_F10Impl _value, $Res Function(_$LddKey_F10Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F10Impl extends LddKey_F10 {
  const _$LddKey_F10Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f10()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F10Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f10();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f10?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f10 != null) {
      return f10();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f10(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f10?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f10 != null) {
      return f10(this);
    }
    return orElse();
  }
}

abstract class LddKey_F10 extends LddKey {
  const factory LddKey_F10() = _$LddKey_F10Impl;
  const LddKey_F10._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F11ImplCopyWith<$Res> {
  factory _$$LddKey_F11ImplCopyWith(
          _$LddKey_F11Impl value, $Res Function(_$LddKey_F11Impl) then) =
      __$$LddKey_F11ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F11ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F11Impl>
    implements _$$LddKey_F11ImplCopyWith<$Res> {
  __$$LddKey_F11ImplCopyWithImpl(
      _$LddKey_F11Impl _value, $Res Function(_$LddKey_F11Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F11Impl extends LddKey_F11 {
  const _$LddKey_F11Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f11()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F11Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f11();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f11?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f11 != null) {
      return f11();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f11(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f11?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f11 != null) {
      return f11(this);
    }
    return orElse();
  }
}

abstract class LddKey_F11 extends LddKey {
  const factory LddKey_F11() = _$LddKey_F11Impl;
  const LddKey_F11._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F12ImplCopyWith<$Res> {
  factory _$$LddKey_F12ImplCopyWith(
          _$LddKey_F12Impl value, $Res Function(_$LddKey_F12Impl) then) =
      __$$LddKey_F12ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F12ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F12Impl>
    implements _$$LddKey_F12ImplCopyWith<$Res> {
  __$$LddKey_F12ImplCopyWithImpl(
      _$LddKey_F12Impl _value, $Res Function(_$LddKey_F12Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F12Impl extends LddKey_F12 {
  const _$LddKey_F12Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f12()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F12Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f12();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f12?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f12 != null) {
      return f12();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f12(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f12?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f12 != null) {
      return f12(this);
    }
    return orElse();
  }
}

abstract class LddKey_F12 extends LddKey {
  const factory LddKey_F12() = _$LddKey_F12Impl;
  const LddKey_F12._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F2ImplCopyWith<$Res> {
  factory _$$LddKey_F2ImplCopyWith(
          _$LddKey_F2Impl value, $Res Function(_$LddKey_F2Impl) then) =
      __$$LddKey_F2ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F2ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F2Impl>
    implements _$$LddKey_F2ImplCopyWith<$Res> {
  __$$LddKey_F2ImplCopyWithImpl(
      _$LddKey_F2Impl _value, $Res Function(_$LddKey_F2Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F2Impl extends LddKey_F2 {
  const _$LddKey_F2Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f2()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F2Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f2();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f2?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f2 != null) {
      return f2();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f2 != null) {
      return f2(this);
    }
    return orElse();
  }
}

abstract class LddKey_F2 extends LddKey {
  const factory LddKey_F2() = _$LddKey_F2Impl;
  const LddKey_F2._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F3ImplCopyWith<$Res> {
  factory _$$LddKey_F3ImplCopyWith(
          _$LddKey_F3Impl value, $Res Function(_$LddKey_F3Impl) then) =
      __$$LddKey_F3ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F3ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F3Impl>
    implements _$$LddKey_F3ImplCopyWith<$Res> {
  __$$LddKey_F3ImplCopyWithImpl(
      _$LddKey_F3Impl _value, $Res Function(_$LddKey_F3Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F3Impl extends LddKey_F3 {
  const _$LddKey_F3Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f3()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F3Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f3();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f3?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f3 != null) {
      return f3();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f3(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f3?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f3 != null) {
      return f3(this);
    }
    return orElse();
  }
}

abstract class LddKey_F3 extends LddKey {
  const factory LddKey_F3() = _$LddKey_F3Impl;
  const LddKey_F3._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F4ImplCopyWith<$Res> {
  factory _$$LddKey_F4ImplCopyWith(
          _$LddKey_F4Impl value, $Res Function(_$LddKey_F4Impl) then) =
      __$$LddKey_F4ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F4ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F4Impl>
    implements _$$LddKey_F4ImplCopyWith<$Res> {
  __$$LddKey_F4ImplCopyWithImpl(
      _$LddKey_F4Impl _value, $Res Function(_$LddKey_F4Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F4Impl extends LddKey_F4 {
  const _$LddKey_F4Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f4()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F4Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f4();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f4?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f4 != null) {
      return f4();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f4(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f4?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f4 != null) {
      return f4(this);
    }
    return orElse();
  }
}

abstract class LddKey_F4 extends LddKey {
  const factory LddKey_F4() = _$LddKey_F4Impl;
  const LddKey_F4._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F5ImplCopyWith<$Res> {
  factory _$$LddKey_F5ImplCopyWith(
          _$LddKey_F5Impl value, $Res Function(_$LddKey_F5Impl) then) =
      __$$LddKey_F5ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F5ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F5Impl>
    implements _$$LddKey_F5ImplCopyWith<$Res> {
  __$$LddKey_F5ImplCopyWithImpl(
      _$LddKey_F5Impl _value, $Res Function(_$LddKey_F5Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F5Impl extends LddKey_F5 {
  const _$LddKey_F5Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f5()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F5Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f5();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f5?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f5 != null) {
      return f5();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f5(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f5?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f5 != null) {
      return f5(this);
    }
    return orElse();
  }
}

abstract class LddKey_F5 extends LddKey {
  const factory LddKey_F5() = _$LddKey_F5Impl;
  const LddKey_F5._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F6ImplCopyWith<$Res> {
  factory _$$LddKey_F6ImplCopyWith(
          _$LddKey_F6Impl value, $Res Function(_$LddKey_F6Impl) then) =
      __$$LddKey_F6ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F6ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F6Impl>
    implements _$$LddKey_F6ImplCopyWith<$Res> {
  __$$LddKey_F6ImplCopyWithImpl(
      _$LddKey_F6Impl _value, $Res Function(_$LddKey_F6Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F6Impl extends LddKey_F6 {
  const _$LddKey_F6Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f6()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F6Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f6();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f6?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f6 != null) {
      return f6();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f6(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f6?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f6 != null) {
      return f6(this);
    }
    return orElse();
  }
}

abstract class LddKey_F6 extends LddKey {
  const factory LddKey_F6() = _$LddKey_F6Impl;
  const LddKey_F6._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F7ImplCopyWith<$Res> {
  factory _$$LddKey_F7ImplCopyWith(
          _$LddKey_F7Impl value, $Res Function(_$LddKey_F7Impl) then) =
      __$$LddKey_F7ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F7ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F7Impl>
    implements _$$LddKey_F7ImplCopyWith<$Res> {
  __$$LddKey_F7ImplCopyWithImpl(
      _$LddKey_F7Impl _value, $Res Function(_$LddKey_F7Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F7Impl extends LddKey_F7 {
  const _$LddKey_F7Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f7()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F7Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f7();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f7?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f7 != null) {
      return f7();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f7(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f7?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f7 != null) {
      return f7(this);
    }
    return orElse();
  }
}

abstract class LddKey_F7 extends LddKey {
  const factory LddKey_F7() = _$LddKey_F7Impl;
  const LddKey_F7._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F8ImplCopyWith<$Res> {
  factory _$$LddKey_F8ImplCopyWith(
          _$LddKey_F8Impl value, $Res Function(_$LddKey_F8Impl) then) =
      __$$LddKey_F8ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F8ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F8Impl>
    implements _$$LddKey_F8ImplCopyWith<$Res> {
  __$$LddKey_F8ImplCopyWithImpl(
      _$LddKey_F8Impl _value, $Res Function(_$LddKey_F8Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F8Impl extends LddKey_F8 {
  const _$LddKey_F8Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f8()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F8Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f8();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f8?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f8 != null) {
      return f8();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f8(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f8?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f8 != null) {
      return f8(this);
    }
    return orElse();
  }
}

abstract class LddKey_F8 extends LddKey {
  const factory LddKey_F8() = _$LddKey_F8Impl;
  const LddKey_F8._() : super._();
}

/// @nodoc
abstract class _$$LddKey_F9ImplCopyWith<$Res> {
  factory _$$LddKey_F9ImplCopyWith(
          _$LddKey_F9Impl value, $Res Function(_$LddKey_F9Impl) then) =
      __$$LddKey_F9ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_F9ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_F9Impl>
    implements _$$LddKey_F9ImplCopyWith<$Res> {
  __$$LddKey_F9ImplCopyWithImpl(
      _$LddKey_F9Impl _value, $Res Function(_$LddKey_F9Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_F9Impl extends LddKey_F9 {
  const _$LddKey_F9Impl() : super._();

  @override
  String toString() {
    return 'LddKey.f9()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_F9Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return f9();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return f9?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (f9 != null) {
      return f9();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return f9(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return f9?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (f9 != null) {
      return f9(this);
    }
    return orElse();
  }
}

abstract class LddKey_F9 extends LddKey {
  const factory LddKey_F9() = _$LddKey_F9Impl;
  const LddKey_F9._() : super._();
}

/// @nodoc
abstract class _$$LddKey_HomeImplCopyWith<$Res> {
  factory _$$LddKey_HomeImplCopyWith(
          _$LddKey_HomeImpl value, $Res Function(_$LddKey_HomeImpl) then) =
      __$$LddKey_HomeImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_HomeImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_HomeImpl>
    implements _$$LddKey_HomeImplCopyWith<$Res> {
  __$$LddKey_HomeImplCopyWithImpl(
      _$LddKey_HomeImpl _value, $Res Function(_$LddKey_HomeImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_HomeImpl extends LddKey_Home {
  const _$LddKey_HomeImpl() : super._();

  @override
  String toString() {
    return 'LddKey.home()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_HomeImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return home();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return home?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (home != null) {
      return home();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return home(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return home?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (home != null) {
      return home(this);
    }
    return orElse();
  }
}

abstract class LddKey_Home extends LddKey {
  const factory LddKey_Home() = _$LddKey_HomeImpl;
  const LddKey_Home._() : super._();
}

/// @nodoc
abstract class _$$LddKey_LeftArrowImplCopyWith<$Res> {
  factory _$$LddKey_LeftArrowImplCopyWith(_$LddKey_LeftArrowImpl value,
          $Res Function(_$LddKey_LeftArrowImpl) then) =
      __$$LddKey_LeftArrowImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_LeftArrowImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_LeftArrowImpl>
    implements _$$LddKey_LeftArrowImplCopyWith<$Res> {
  __$$LddKey_LeftArrowImplCopyWithImpl(_$LddKey_LeftArrowImpl _value,
      $Res Function(_$LddKey_LeftArrowImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_LeftArrowImpl extends LddKey_LeftArrow {
  const _$LddKey_LeftArrowImpl() : super._();

  @override
  String toString() {
    return 'LddKey.leftArrow()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_LeftArrowImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return leftArrow();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return leftArrow?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (leftArrow != null) {
      return leftArrow();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return leftArrow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return leftArrow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (leftArrow != null) {
      return leftArrow(this);
    }
    return orElse();
  }
}

abstract class LddKey_LeftArrow extends LddKey {
  const factory LddKey_LeftArrow() = _$LddKey_LeftArrowImpl;
  const LddKey_LeftArrow._() : super._();
}

/// @nodoc
abstract class _$$LddKey_MetaLeftImplCopyWith<$Res> {
  factory _$$LddKey_MetaLeftImplCopyWith(_$LddKey_MetaLeftImpl value,
          $Res Function(_$LddKey_MetaLeftImpl) then) =
      __$$LddKey_MetaLeftImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_MetaLeftImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_MetaLeftImpl>
    implements _$$LddKey_MetaLeftImplCopyWith<$Res> {
  __$$LddKey_MetaLeftImplCopyWithImpl(
      _$LddKey_MetaLeftImpl _value, $Res Function(_$LddKey_MetaLeftImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_MetaLeftImpl extends LddKey_MetaLeft {
  const _$LddKey_MetaLeftImpl() : super._();

  @override
  String toString() {
    return 'LddKey.metaLeft()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_MetaLeftImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return metaLeft();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return metaLeft?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (metaLeft != null) {
      return metaLeft();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return metaLeft(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return metaLeft?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (metaLeft != null) {
      return metaLeft(this);
    }
    return orElse();
  }
}

abstract class LddKey_MetaLeft extends LddKey {
  const factory LddKey_MetaLeft() = _$LddKey_MetaLeftImpl;
  const LddKey_MetaLeft._() : super._();
}

/// @nodoc
abstract class _$$LddKey_MetaRightImplCopyWith<$Res> {
  factory _$$LddKey_MetaRightImplCopyWith(_$LddKey_MetaRightImpl value,
          $Res Function(_$LddKey_MetaRightImpl) then) =
      __$$LddKey_MetaRightImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_MetaRightImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_MetaRightImpl>
    implements _$$LddKey_MetaRightImplCopyWith<$Res> {
  __$$LddKey_MetaRightImplCopyWithImpl(_$LddKey_MetaRightImpl _value,
      $Res Function(_$LddKey_MetaRightImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_MetaRightImpl extends LddKey_MetaRight {
  const _$LddKey_MetaRightImpl() : super._();

  @override
  String toString() {
    return 'LddKey.metaRight()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_MetaRightImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return metaRight();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return metaRight?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (metaRight != null) {
      return metaRight();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return metaRight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return metaRight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (metaRight != null) {
      return metaRight(this);
    }
    return orElse();
  }
}

abstract class LddKey_MetaRight extends LddKey {
  const factory LddKey_MetaRight() = _$LddKey_MetaRightImpl;
  const LddKey_MetaRight._() : super._();
}

/// @nodoc
abstract class _$$LddKey_PageDownImplCopyWith<$Res> {
  factory _$$LddKey_PageDownImplCopyWith(_$LddKey_PageDownImpl value,
          $Res Function(_$LddKey_PageDownImpl) then) =
      __$$LddKey_PageDownImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_PageDownImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_PageDownImpl>
    implements _$$LddKey_PageDownImplCopyWith<$Res> {
  __$$LddKey_PageDownImplCopyWithImpl(
      _$LddKey_PageDownImpl _value, $Res Function(_$LddKey_PageDownImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_PageDownImpl extends LddKey_PageDown {
  const _$LddKey_PageDownImpl() : super._();

  @override
  String toString() {
    return 'LddKey.pageDown()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_PageDownImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return pageDown();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return pageDown?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (pageDown != null) {
      return pageDown();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return pageDown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return pageDown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (pageDown != null) {
      return pageDown(this);
    }
    return orElse();
  }
}

abstract class LddKey_PageDown extends LddKey {
  const factory LddKey_PageDown() = _$LddKey_PageDownImpl;
  const LddKey_PageDown._() : super._();
}

/// @nodoc
abstract class _$$LddKey_PageUpImplCopyWith<$Res> {
  factory _$$LddKey_PageUpImplCopyWith(
          _$LddKey_PageUpImpl value, $Res Function(_$LddKey_PageUpImpl) then) =
      __$$LddKey_PageUpImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_PageUpImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_PageUpImpl>
    implements _$$LddKey_PageUpImplCopyWith<$Res> {
  __$$LddKey_PageUpImplCopyWithImpl(
      _$LddKey_PageUpImpl _value, $Res Function(_$LddKey_PageUpImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_PageUpImpl extends LddKey_PageUp {
  const _$LddKey_PageUpImpl() : super._();

  @override
  String toString() {
    return 'LddKey.pageUp()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_PageUpImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return pageUp();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return pageUp?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (pageUp != null) {
      return pageUp();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return pageUp(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return pageUp?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (pageUp != null) {
      return pageUp(this);
    }
    return orElse();
  }
}

abstract class LddKey_PageUp extends LddKey {
  const factory LddKey_PageUp() = _$LddKey_PageUpImpl;
  const LddKey_PageUp._() : super._();
}

/// @nodoc
abstract class _$$LddKey_ReturnImplCopyWith<$Res> {
  factory _$$LddKey_ReturnImplCopyWith(
          _$LddKey_ReturnImpl value, $Res Function(_$LddKey_ReturnImpl) then) =
      __$$LddKey_ReturnImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_ReturnImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_ReturnImpl>
    implements _$$LddKey_ReturnImplCopyWith<$Res> {
  __$$LddKey_ReturnImplCopyWithImpl(
      _$LddKey_ReturnImpl _value, $Res Function(_$LddKey_ReturnImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_ReturnImpl extends LddKey_Return {
  const _$LddKey_ReturnImpl() : super._();

  @override
  String toString() {
    return 'LddKey.return_()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_ReturnImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return return_();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return return_?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (return_ != null) {
      return return_();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return return_(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return return_?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (return_ != null) {
      return return_(this);
    }
    return orElse();
  }
}

abstract class LddKey_Return extends LddKey {
  const factory LddKey_Return() = _$LddKey_ReturnImpl;
  const LddKey_Return._() : super._();
}

/// @nodoc
abstract class _$$LddKey_RightArrowImplCopyWith<$Res> {
  factory _$$LddKey_RightArrowImplCopyWith(_$LddKey_RightArrowImpl value,
          $Res Function(_$LddKey_RightArrowImpl) then) =
      __$$LddKey_RightArrowImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_RightArrowImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_RightArrowImpl>
    implements _$$LddKey_RightArrowImplCopyWith<$Res> {
  __$$LddKey_RightArrowImplCopyWithImpl(_$LddKey_RightArrowImpl _value,
      $Res Function(_$LddKey_RightArrowImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_RightArrowImpl extends LddKey_RightArrow {
  const _$LddKey_RightArrowImpl() : super._();

  @override
  String toString() {
    return 'LddKey.rightArrow()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_RightArrowImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return rightArrow();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return rightArrow?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (rightArrow != null) {
      return rightArrow();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return rightArrow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return rightArrow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (rightArrow != null) {
      return rightArrow(this);
    }
    return orElse();
  }
}

abstract class LddKey_RightArrow extends LddKey {
  const factory LddKey_RightArrow() = _$LddKey_RightArrowImpl;
  const LddKey_RightArrow._() : super._();
}

/// @nodoc
abstract class _$$LddKey_ShiftLeftImplCopyWith<$Res> {
  factory _$$LddKey_ShiftLeftImplCopyWith(_$LddKey_ShiftLeftImpl value,
          $Res Function(_$LddKey_ShiftLeftImpl) then) =
      __$$LddKey_ShiftLeftImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_ShiftLeftImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_ShiftLeftImpl>
    implements _$$LddKey_ShiftLeftImplCopyWith<$Res> {
  __$$LddKey_ShiftLeftImplCopyWithImpl(_$LddKey_ShiftLeftImpl _value,
      $Res Function(_$LddKey_ShiftLeftImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_ShiftLeftImpl extends LddKey_ShiftLeft {
  const _$LddKey_ShiftLeftImpl() : super._();

  @override
  String toString() {
    return 'LddKey.shiftLeft()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_ShiftLeftImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return shiftLeft();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return shiftLeft?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (shiftLeft != null) {
      return shiftLeft();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return shiftLeft(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return shiftLeft?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (shiftLeft != null) {
      return shiftLeft(this);
    }
    return orElse();
  }
}

abstract class LddKey_ShiftLeft extends LddKey {
  const factory LddKey_ShiftLeft() = _$LddKey_ShiftLeftImpl;
  const LddKey_ShiftLeft._() : super._();
}

/// @nodoc
abstract class _$$LddKey_ShiftRightImplCopyWith<$Res> {
  factory _$$LddKey_ShiftRightImplCopyWith(_$LddKey_ShiftRightImpl value,
          $Res Function(_$LddKey_ShiftRightImpl) then) =
      __$$LddKey_ShiftRightImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_ShiftRightImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_ShiftRightImpl>
    implements _$$LddKey_ShiftRightImplCopyWith<$Res> {
  __$$LddKey_ShiftRightImplCopyWithImpl(_$LddKey_ShiftRightImpl _value,
      $Res Function(_$LddKey_ShiftRightImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_ShiftRightImpl extends LddKey_ShiftRight {
  const _$LddKey_ShiftRightImpl() : super._();

  @override
  String toString() {
    return 'LddKey.shiftRight()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_ShiftRightImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return shiftRight();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return shiftRight?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (shiftRight != null) {
      return shiftRight();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return shiftRight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return shiftRight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (shiftRight != null) {
      return shiftRight(this);
    }
    return orElse();
  }
}

abstract class LddKey_ShiftRight extends LddKey {
  const factory LddKey_ShiftRight() = _$LddKey_ShiftRightImpl;
  const LddKey_ShiftRight._() : super._();
}

/// @nodoc
abstract class _$$LddKey_SpaceImplCopyWith<$Res> {
  factory _$$LddKey_SpaceImplCopyWith(
          _$LddKey_SpaceImpl value, $Res Function(_$LddKey_SpaceImpl) then) =
      __$$LddKey_SpaceImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_SpaceImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_SpaceImpl>
    implements _$$LddKey_SpaceImplCopyWith<$Res> {
  __$$LddKey_SpaceImplCopyWithImpl(
      _$LddKey_SpaceImpl _value, $Res Function(_$LddKey_SpaceImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_SpaceImpl extends LddKey_Space {
  const _$LddKey_SpaceImpl() : super._();

  @override
  String toString() {
    return 'LddKey.space()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_SpaceImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return space();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return space?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (space != null) {
      return space();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return space(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return space?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (space != null) {
      return space(this);
    }
    return orElse();
  }
}

abstract class LddKey_Space extends LddKey {
  const factory LddKey_Space() = _$LddKey_SpaceImpl;
  const LddKey_Space._() : super._();
}

/// @nodoc
abstract class _$$LddKey_TabImplCopyWith<$Res> {
  factory _$$LddKey_TabImplCopyWith(
          _$LddKey_TabImpl value, $Res Function(_$LddKey_TabImpl) then) =
      __$$LddKey_TabImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_TabImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_TabImpl>
    implements _$$LddKey_TabImplCopyWith<$Res> {
  __$$LddKey_TabImplCopyWithImpl(
      _$LddKey_TabImpl _value, $Res Function(_$LddKey_TabImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_TabImpl extends LddKey_Tab {
  const _$LddKey_TabImpl() : super._();

  @override
  String toString() {
    return 'LddKey.tab()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_TabImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return tab();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return tab?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (tab != null) {
      return tab();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return tab(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return tab?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (tab != null) {
      return tab(this);
    }
    return orElse();
  }
}

abstract class LddKey_Tab extends LddKey {
  const factory LddKey_Tab() = _$LddKey_TabImpl;
  const LddKey_Tab._() : super._();
}

/// @nodoc
abstract class _$$LddKey_UpArrowImplCopyWith<$Res> {
  factory _$$LddKey_UpArrowImplCopyWith(_$LddKey_UpArrowImpl value,
          $Res Function(_$LddKey_UpArrowImpl) then) =
      __$$LddKey_UpArrowImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_UpArrowImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_UpArrowImpl>
    implements _$$LddKey_UpArrowImplCopyWith<$Res> {
  __$$LddKey_UpArrowImplCopyWithImpl(
      _$LddKey_UpArrowImpl _value, $Res Function(_$LddKey_UpArrowImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_UpArrowImpl extends LddKey_UpArrow {
  const _$LddKey_UpArrowImpl() : super._();

  @override
  String toString() {
    return 'LddKey.upArrow()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_UpArrowImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return upArrow();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return upArrow?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (upArrow != null) {
      return upArrow();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return upArrow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return upArrow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (upArrow != null) {
      return upArrow(this);
    }
    return orElse();
  }
}

abstract class LddKey_UpArrow extends LddKey {
  const factory LddKey_UpArrow() = _$LddKey_UpArrowImpl;
  const LddKey_UpArrow._() : super._();
}

/// @nodoc
abstract class _$$LddKey_PrintScreenImplCopyWith<$Res> {
  factory _$$LddKey_PrintScreenImplCopyWith(_$LddKey_PrintScreenImpl value,
          $Res Function(_$LddKey_PrintScreenImpl) then) =
      __$$LddKey_PrintScreenImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_PrintScreenImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_PrintScreenImpl>
    implements _$$LddKey_PrintScreenImplCopyWith<$Res> {
  __$$LddKey_PrintScreenImplCopyWithImpl(_$LddKey_PrintScreenImpl _value,
      $Res Function(_$LddKey_PrintScreenImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_PrintScreenImpl extends LddKey_PrintScreen {
  const _$LddKey_PrintScreenImpl() : super._();

  @override
  String toString() {
    return 'LddKey.printScreen()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_PrintScreenImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return printScreen();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return printScreen?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (printScreen != null) {
      return printScreen();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return printScreen(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return printScreen?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (printScreen != null) {
      return printScreen(this);
    }
    return orElse();
  }
}

abstract class LddKey_PrintScreen extends LddKey {
  const factory LddKey_PrintScreen() = _$LddKey_PrintScreenImpl;
  const LddKey_PrintScreen._() : super._();
}

/// @nodoc
abstract class _$$LddKey_ScrollLockImplCopyWith<$Res> {
  factory _$$LddKey_ScrollLockImplCopyWith(_$LddKey_ScrollLockImpl value,
          $Res Function(_$LddKey_ScrollLockImpl) then) =
      __$$LddKey_ScrollLockImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_ScrollLockImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_ScrollLockImpl>
    implements _$$LddKey_ScrollLockImplCopyWith<$Res> {
  __$$LddKey_ScrollLockImplCopyWithImpl(_$LddKey_ScrollLockImpl _value,
      $Res Function(_$LddKey_ScrollLockImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_ScrollLockImpl extends LddKey_ScrollLock {
  const _$LddKey_ScrollLockImpl() : super._();

  @override
  String toString() {
    return 'LddKey.scrollLock()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_ScrollLockImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return scrollLock();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return scrollLock?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (scrollLock != null) {
      return scrollLock();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return scrollLock(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return scrollLock?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (scrollLock != null) {
      return scrollLock(this);
    }
    return orElse();
  }
}

abstract class LddKey_ScrollLock extends LddKey {
  const factory LddKey_ScrollLock() = _$LddKey_ScrollLockImpl;
  const LddKey_ScrollLock._() : super._();
}

/// @nodoc
abstract class _$$LddKey_PauseImplCopyWith<$Res> {
  factory _$$LddKey_PauseImplCopyWith(
          _$LddKey_PauseImpl value, $Res Function(_$LddKey_PauseImpl) then) =
      __$$LddKey_PauseImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_PauseImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_PauseImpl>
    implements _$$LddKey_PauseImplCopyWith<$Res> {
  __$$LddKey_PauseImplCopyWithImpl(
      _$LddKey_PauseImpl _value, $Res Function(_$LddKey_PauseImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_PauseImpl extends LddKey_Pause {
  const _$LddKey_PauseImpl() : super._();

  @override
  String toString() {
    return 'LddKey.pause()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_PauseImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return pause();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return pause?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (pause != null) {
      return pause();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return pause(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return pause?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (pause != null) {
      return pause(this);
    }
    return orElse();
  }
}

abstract class LddKey_Pause extends LddKey {
  const factory LddKey_Pause() = _$LddKey_PauseImpl;
  const LddKey_Pause._() : super._();
}

/// @nodoc
abstract class _$$LddKey_NumLockImplCopyWith<$Res> {
  factory _$$LddKey_NumLockImplCopyWith(_$LddKey_NumLockImpl value,
          $Res Function(_$LddKey_NumLockImpl) then) =
      __$$LddKey_NumLockImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_NumLockImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_NumLockImpl>
    implements _$$LddKey_NumLockImplCopyWith<$Res> {
  __$$LddKey_NumLockImplCopyWithImpl(
      _$LddKey_NumLockImpl _value, $Res Function(_$LddKey_NumLockImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_NumLockImpl extends LddKey_NumLock {
  const _$LddKey_NumLockImpl() : super._();

  @override
  String toString() {
    return 'LddKey.numLock()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_NumLockImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return numLock();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return numLock?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (numLock != null) {
      return numLock();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return numLock(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return numLock?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (numLock != null) {
      return numLock(this);
    }
    return orElse();
  }
}

abstract class LddKey_NumLock extends LddKey {
  const factory LddKey_NumLock() = _$LddKey_NumLockImpl;
  const LddKey_NumLock._() : super._();
}

/// @nodoc
abstract class _$$LddKey_BackQuoteImplCopyWith<$Res> {
  factory _$$LddKey_BackQuoteImplCopyWith(_$LddKey_BackQuoteImpl value,
          $Res Function(_$LddKey_BackQuoteImpl) then) =
      __$$LddKey_BackQuoteImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_BackQuoteImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_BackQuoteImpl>
    implements _$$LddKey_BackQuoteImplCopyWith<$Res> {
  __$$LddKey_BackQuoteImplCopyWithImpl(_$LddKey_BackQuoteImpl _value,
      $Res Function(_$LddKey_BackQuoteImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_BackQuoteImpl extends LddKey_BackQuote {
  const _$LddKey_BackQuoteImpl() : super._();

  @override
  String toString() {
    return 'LddKey.backQuote()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_BackQuoteImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return backQuote();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return backQuote?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (backQuote != null) {
      return backQuote();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return backQuote(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return backQuote?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (backQuote != null) {
      return backQuote(this);
    }
    return orElse();
  }
}

abstract class LddKey_BackQuote extends LddKey {
  const factory LddKey_BackQuote() = _$LddKey_BackQuoteImpl;
  const LddKey_BackQuote._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num1ImplCopyWith<$Res> {
  factory _$$LddKey_Num1ImplCopyWith(
          _$LddKey_Num1Impl value, $Res Function(_$LddKey_Num1Impl) then) =
      __$$LddKey_Num1ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num1ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num1Impl>
    implements _$$LddKey_Num1ImplCopyWith<$Res> {
  __$$LddKey_Num1ImplCopyWithImpl(
      _$LddKey_Num1Impl _value, $Res Function(_$LddKey_Num1Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num1Impl extends LddKey_Num1 {
  const _$LddKey_Num1Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num1()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num1Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num1();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num1?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num1 != null) {
      return num1();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num1(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num1?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num1 != null) {
      return num1(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num1 extends LddKey {
  const factory LddKey_Num1() = _$LddKey_Num1Impl;
  const LddKey_Num1._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num2ImplCopyWith<$Res> {
  factory _$$LddKey_Num2ImplCopyWith(
          _$LddKey_Num2Impl value, $Res Function(_$LddKey_Num2Impl) then) =
      __$$LddKey_Num2ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num2ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num2Impl>
    implements _$$LddKey_Num2ImplCopyWith<$Res> {
  __$$LddKey_Num2ImplCopyWithImpl(
      _$LddKey_Num2Impl _value, $Res Function(_$LddKey_Num2Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num2Impl extends LddKey_Num2 {
  const _$LddKey_Num2Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num2()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num2Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num2();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num2?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num2 != null) {
      return num2();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num2 != null) {
      return num2(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num2 extends LddKey {
  const factory LddKey_Num2() = _$LddKey_Num2Impl;
  const LddKey_Num2._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num3ImplCopyWith<$Res> {
  factory _$$LddKey_Num3ImplCopyWith(
          _$LddKey_Num3Impl value, $Res Function(_$LddKey_Num3Impl) then) =
      __$$LddKey_Num3ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num3ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num3Impl>
    implements _$$LddKey_Num3ImplCopyWith<$Res> {
  __$$LddKey_Num3ImplCopyWithImpl(
      _$LddKey_Num3Impl _value, $Res Function(_$LddKey_Num3Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num3Impl extends LddKey_Num3 {
  const _$LddKey_Num3Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num3()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num3Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num3();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num3?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num3 != null) {
      return num3();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num3(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num3?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num3 != null) {
      return num3(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num3 extends LddKey {
  const factory LddKey_Num3() = _$LddKey_Num3Impl;
  const LddKey_Num3._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num4ImplCopyWith<$Res> {
  factory _$$LddKey_Num4ImplCopyWith(
          _$LddKey_Num4Impl value, $Res Function(_$LddKey_Num4Impl) then) =
      __$$LddKey_Num4ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num4ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num4Impl>
    implements _$$LddKey_Num4ImplCopyWith<$Res> {
  __$$LddKey_Num4ImplCopyWithImpl(
      _$LddKey_Num4Impl _value, $Res Function(_$LddKey_Num4Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num4Impl extends LddKey_Num4 {
  const _$LddKey_Num4Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num4()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num4Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num4();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num4?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num4 != null) {
      return num4();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num4(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num4?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num4 != null) {
      return num4(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num4 extends LddKey {
  const factory LddKey_Num4() = _$LddKey_Num4Impl;
  const LddKey_Num4._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num5ImplCopyWith<$Res> {
  factory _$$LddKey_Num5ImplCopyWith(
          _$LddKey_Num5Impl value, $Res Function(_$LddKey_Num5Impl) then) =
      __$$LddKey_Num5ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num5ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num5Impl>
    implements _$$LddKey_Num5ImplCopyWith<$Res> {
  __$$LddKey_Num5ImplCopyWithImpl(
      _$LddKey_Num5Impl _value, $Res Function(_$LddKey_Num5Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num5Impl extends LddKey_Num5 {
  const _$LddKey_Num5Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num5()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num5Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num5();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num5?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num5 != null) {
      return num5();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num5(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num5?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num5 != null) {
      return num5(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num5 extends LddKey {
  const factory LddKey_Num5() = _$LddKey_Num5Impl;
  const LddKey_Num5._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num6ImplCopyWith<$Res> {
  factory _$$LddKey_Num6ImplCopyWith(
          _$LddKey_Num6Impl value, $Res Function(_$LddKey_Num6Impl) then) =
      __$$LddKey_Num6ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num6ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num6Impl>
    implements _$$LddKey_Num6ImplCopyWith<$Res> {
  __$$LddKey_Num6ImplCopyWithImpl(
      _$LddKey_Num6Impl _value, $Res Function(_$LddKey_Num6Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num6Impl extends LddKey_Num6 {
  const _$LddKey_Num6Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num6()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num6Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num6();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num6?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num6 != null) {
      return num6();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num6(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num6?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num6 != null) {
      return num6(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num6 extends LddKey {
  const factory LddKey_Num6() = _$LddKey_Num6Impl;
  const LddKey_Num6._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num7ImplCopyWith<$Res> {
  factory _$$LddKey_Num7ImplCopyWith(
          _$LddKey_Num7Impl value, $Res Function(_$LddKey_Num7Impl) then) =
      __$$LddKey_Num7ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num7ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num7Impl>
    implements _$$LddKey_Num7ImplCopyWith<$Res> {
  __$$LddKey_Num7ImplCopyWithImpl(
      _$LddKey_Num7Impl _value, $Res Function(_$LddKey_Num7Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num7Impl extends LddKey_Num7 {
  const _$LddKey_Num7Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num7()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num7Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num7();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num7?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num7 != null) {
      return num7();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num7(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num7?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num7 != null) {
      return num7(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num7 extends LddKey {
  const factory LddKey_Num7() = _$LddKey_Num7Impl;
  const LddKey_Num7._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num8ImplCopyWith<$Res> {
  factory _$$LddKey_Num8ImplCopyWith(
          _$LddKey_Num8Impl value, $Res Function(_$LddKey_Num8Impl) then) =
      __$$LddKey_Num8ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num8ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num8Impl>
    implements _$$LddKey_Num8ImplCopyWith<$Res> {
  __$$LddKey_Num8ImplCopyWithImpl(
      _$LddKey_Num8Impl _value, $Res Function(_$LddKey_Num8Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num8Impl extends LddKey_Num8 {
  const _$LddKey_Num8Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num8()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num8Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num8();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num8?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num8 != null) {
      return num8();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num8(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num8?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num8 != null) {
      return num8(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num8 extends LddKey {
  const factory LddKey_Num8() = _$LddKey_Num8Impl;
  const LddKey_Num8._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num9ImplCopyWith<$Res> {
  factory _$$LddKey_Num9ImplCopyWith(
          _$LddKey_Num9Impl value, $Res Function(_$LddKey_Num9Impl) then) =
      __$$LddKey_Num9ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num9ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num9Impl>
    implements _$$LddKey_Num9ImplCopyWith<$Res> {
  __$$LddKey_Num9ImplCopyWithImpl(
      _$LddKey_Num9Impl _value, $Res Function(_$LddKey_Num9Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num9Impl extends LddKey_Num9 {
  const _$LddKey_Num9Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num9()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num9Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num9();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num9?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num9 != null) {
      return num9();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num9(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num9?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num9 != null) {
      return num9(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num9 extends LddKey {
  const factory LddKey_Num9() = _$LddKey_Num9Impl;
  const LddKey_Num9._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Num0ImplCopyWith<$Res> {
  factory _$$LddKey_Num0ImplCopyWith(
          _$LddKey_Num0Impl value, $Res Function(_$LddKey_Num0Impl) then) =
      __$$LddKey_Num0ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Num0ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Num0Impl>
    implements _$$LddKey_Num0ImplCopyWith<$Res> {
  __$$LddKey_Num0ImplCopyWithImpl(
      _$LddKey_Num0Impl _value, $Res Function(_$LddKey_Num0Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Num0Impl extends LddKey_Num0 {
  const _$LddKey_Num0Impl() : super._();

  @override
  String toString() {
    return 'LddKey.num0()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Num0Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return num0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return num0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (num0 != null) {
      return num0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return num0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return num0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (num0 != null) {
      return num0(this);
    }
    return orElse();
  }
}

abstract class LddKey_Num0 extends LddKey {
  const factory LddKey_Num0() = _$LddKey_Num0Impl;
  const LddKey_Num0._() : super._();
}

/// @nodoc
abstract class _$$LddKey_MinusImplCopyWith<$Res> {
  factory _$$LddKey_MinusImplCopyWith(
          _$LddKey_MinusImpl value, $Res Function(_$LddKey_MinusImpl) then) =
      __$$LddKey_MinusImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_MinusImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_MinusImpl>
    implements _$$LddKey_MinusImplCopyWith<$Res> {
  __$$LddKey_MinusImplCopyWithImpl(
      _$LddKey_MinusImpl _value, $Res Function(_$LddKey_MinusImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_MinusImpl extends LddKey_Minus {
  const _$LddKey_MinusImpl() : super._();

  @override
  String toString() {
    return 'LddKey.minus()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_MinusImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return minus();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return minus?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (minus != null) {
      return minus();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return minus(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return minus?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (minus != null) {
      return minus(this);
    }
    return orElse();
  }
}

abstract class LddKey_Minus extends LddKey {
  const factory LddKey_Minus() = _$LddKey_MinusImpl;
  const LddKey_Minus._() : super._();
}

/// @nodoc
abstract class _$$LddKey_EqualImplCopyWith<$Res> {
  factory _$$LddKey_EqualImplCopyWith(
          _$LddKey_EqualImpl value, $Res Function(_$LddKey_EqualImpl) then) =
      __$$LddKey_EqualImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_EqualImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_EqualImpl>
    implements _$$LddKey_EqualImplCopyWith<$Res> {
  __$$LddKey_EqualImplCopyWithImpl(
      _$LddKey_EqualImpl _value, $Res Function(_$LddKey_EqualImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_EqualImpl extends LddKey_Equal {
  const _$LddKey_EqualImpl() : super._();

  @override
  String toString() {
    return 'LddKey.equal()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_EqualImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return equal();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return equal?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (equal != null) {
      return equal();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return equal(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return equal?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (equal != null) {
      return equal(this);
    }
    return orElse();
  }
}

abstract class LddKey_Equal extends LddKey {
  const factory LddKey_Equal() = _$LddKey_EqualImpl;
  const LddKey_Equal._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyQImplCopyWith<$Res> {
  factory _$$LddKey_KeyQImplCopyWith(
          _$LddKey_KeyQImpl value, $Res Function(_$LddKey_KeyQImpl) then) =
      __$$LddKey_KeyQImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyQImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyQImpl>
    implements _$$LddKey_KeyQImplCopyWith<$Res> {
  __$$LddKey_KeyQImplCopyWithImpl(
      _$LddKey_KeyQImpl _value, $Res Function(_$LddKey_KeyQImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyQImpl extends LddKey_KeyQ {
  const _$LddKey_KeyQImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyQ()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyQImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyQ();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyQ?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyQ != null) {
      return keyQ();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyQ(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyQ?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyQ != null) {
      return keyQ(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyQ extends LddKey {
  const factory LddKey_KeyQ() = _$LddKey_KeyQImpl;
  const LddKey_KeyQ._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyWImplCopyWith<$Res> {
  factory _$$LddKey_KeyWImplCopyWith(
          _$LddKey_KeyWImpl value, $Res Function(_$LddKey_KeyWImpl) then) =
      __$$LddKey_KeyWImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyWImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyWImpl>
    implements _$$LddKey_KeyWImplCopyWith<$Res> {
  __$$LddKey_KeyWImplCopyWithImpl(
      _$LddKey_KeyWImpl _value, $Res Function(_$LddKey_KeyWImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyWImpl extends LddKey_KeyW {
  const _$LddKey_KeyWImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyW()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyWImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyW();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyW?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyW != null) {
      return keyW();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyW(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyW?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyW != null) {
      return keyW(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyW extends LddKey {
  const factory LddKey_KeyW() = _$LddKey_KeyWImpl;
  const LddKey_KeyW._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyEImplCopyWith<$Res> {
  factory _$$LddKey_KeyEImplCopyWith(
          _$LddKey_KeyEImpl value, $Res Function(_$LddKey_KeyEImpl) then) =
      __$$LddKey_KeyEImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyEImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyEImpl>
    implements _$$LddKey_KeyEImplCopyWith<$Res> {
  __$$LddKey_KeyEImplCopyWithImpl(
      _$LddKey_KeyEImpl _value, $Res Function(_$LddKey_KeyEImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyEImpl extends LddKey_KeyE {
  const _$LddKey_KeyEImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyE()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyEImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyE();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyE?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyE != null) {
      return keyE();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyE(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyE?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyE != null) {
      return keyE(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyE extends LddKey {
  const factory LddKey_KeyE() = _$LddKey_KeyEImpl;
  const LddKey_KeyE._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyRImplCopyWith<$Res> {
  factory _$$LddKey_KeyRImplCopyWith(
          _$LddKey_KeyRImpl value, $Res Function(_$LddKey_KeyRImpl) then) =
      __$$LddKey_KeyRImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyRImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyRImpl>
    implements _$$LddKey_KeyRImplCopyWith<$Res> {
  __$$LddKey_KeyRImplCopyWithImpl(
      _$LddKey_KeyRImpl _value, $Res Function(_$LddKey_KeyRImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyRImpl extends LddKey_KeyR {
  const _$LddKey_KeyRImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyR()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyRImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyR();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyR?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyR != null) {
      return keyR();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyR(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyR?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyR != null) {
      return keyR(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyR extends LddKey {
  const factory LddKey_KeyR() = _$LddKey_KeyRImpl;
  const LddKey_KeyR._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyTImplCopyWith<$Res> {
  factory _$$LddKey_KeyTImplCopyWith(
          _$LddKey_KeyTImpl value, $Res Function(_$LddKey_KeyTImpl) then) =
      __$$LddKey_KeyTImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyTImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyTImpl>
    implements _$$LddKey_KeyTImplCopyWith<$Res> {
  __$$LddKey_KeyTImplCopyWithImpl(
      _$LddKey_KeyTImpl _value, $Res Function(_$LddKey_KeyTImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyTImpl extends LddKey_KeyT {
  const _$LddKey_KeyTImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyT()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyTImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyT();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyT?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyT != null) {
      return keyT();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyT(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyT?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyT != null) {
      return keyT(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyT extends LddKey {
  const factory LddKey_KeyT() = _$LddKey_KeyTImpl;
  const LddKey_KeyT._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyYImplCopyWith<$Res> {
  factory _$$LddKey_KeyYImplCopyWith(
          _$LddKey_KeyYImpl value, $Res Function(_$LddKey_KeyYImpl) then) =
      __$$LddKey_KeyYImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyYImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyYImpl>
    implements _$$LddKey_KeyYImplCopyWith<$Res> {
  __$$LddKey_KeyYImplCopyWithImpl(
      _$LddKey_KeyYImpl _value, $Res Function(_$LddKey_KeyYImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyYImpl extends LddKey_KeyY {
  const _$LddKey_KeyYImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyY()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyYImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyY();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyY?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyY != null) {
      return keyY();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyY(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyY?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyY != null) {
      return keyY(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyY extends LddKey {
  const factory LddKey_KeyY() = _$LddKey_KeyYImpl;
  const LddKey_KeyY._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyUImplCopyWith<$Res> {
  factory _$$LddKey_KeyUImplCopyWith(
          _$LddKey_KeyUImpl value, $Res Function(_$LddKey_KeyUImpl) then) =
      __$$LddKey_KeyUImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyUImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyUImpl>
    implements _$$LddKey_KeyUImplCopyWith<$Res> {
  __$$LddKey_KeyUImplCopyWithImpl(
      _$LddKey_KeyUImpl _value, $Res Function(_$LddKey_KeyUImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyUImpl extends LddKey_KeyU {
  const _$LddKey_KeyUImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyU()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyUImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyU();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyU?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyU != null) {
      return keyU();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyU(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyU?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyU != null) {
      return keyU(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyU extends LddKey {
  const factory LddKey_KeyU() = _$LddKey_KeyUImpl;
  const LddKey_KeyU._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyIImplCopyWith<$Res> {
  factory _$$LddKey_KeyIImplCopyWith(
          _$LddKey_KeyIImpl value, $Res Function(_$LddKey_KeyIImpl) then) =
      __$$LddKey_KeyIImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyIImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyIImpl>
    implements _$$LddKey_KeyIImplCopyWith<$Res> {
  __$$LddKey_KeyIImplCopyWithImpl(
      _$LddKey_KeyIImpl _value, $Res Function(_$LddKey_KeyIImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyIImpl extends LddKey_KeyI {
  const _$LddKey_KeyIImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyI()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyIImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyI();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyI?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyI != null) {
      return keyI();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyI(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyI?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyI != null) {
      return keyI(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyI extends LddKey {
  const factory LddKey_KeyI() = _$LddKey_KeyIImpl;
  const LddKey_KeyI._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyOImplCopyWith<$Res> {
  factory _$$LddKey_KeyOImplCopyWith(
          _$LddKey_KeyOImpl value, $Res Function(_$LddKey_KeyOImpl) then) =
      __$$LddKey_KeyOImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyOImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyOImpl>
    implements _$$LddKey_KeyOImplCopyWith<$Res> {
  __$$LddKey_KeyOImplCopyWithImpl(
      _$LddKey_KeyOImpl _value, $Res Function(_$LddKey_KeyOImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyOImpl extends LddKey_KeyO {
  const _$LddKey_KeyOImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyO()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyOImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyO();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyO?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyO != null) {
      return keyO();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyO(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyO?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyO != null) {
      return keyO(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyO extends LddKey {
  const factory LddKey_KeyO() = _$LddKey_KeyOImpl;
  const LddKey_KeyO._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyPImplCopyWith<$Res> {
  factory _$$LddKey_KeyPImplCopyWith(
          _$LddKey_KeyPImpl value, $Res Function(_$LddKey_KeyPImpl) then) =
      __$$LddKey_KeyPImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyPImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyPImpl>
    implements _$$LddKey_KeyPImplCopyWith<$Res> {
  __$$LddKey_KeyPImplCopyWithImpl(
      _$LddKey_KeyPImpl _value, $Res Function(_$LddKey_KeyPImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyPImpl extends LddKey_KeyP {
  const _$LddKey_KeyPImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyP()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyPImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyP();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyP?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyP != null) {
      return keyP();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyP(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyP?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyP != null) {
      return keyP(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyP extends LddKey {
  const factory LddKey_KeyP() = _$LddKey_KeyPImpl;
  const LddKey_KeyP._() : super._();
}

/// @nodoc
abstract class _$$LddKey_LeftBracketImplCopyWith<$Res> {
  factory _$$LddKey_LeftBracketImplCopyWith(_$LddKey_LeftBracketImpl value,
          $Res Function(_$LddKey_LeftBracketImpl) then) =
      __$$LddKey_LeftBracketImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_LeftBracketImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_LeftBracketImpl>
    implements _$$LddKey_LeftBracketImplCopyWith<$Res> {
  __$$LddKey_LeftBracketImplCopyWithImpl(_$LddKey_LeftBracketImpl _value,
      $Res Function(_$LddKey_LeftBracketImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_LeftBracketImpl extends LddKey_LeftBracket {
  const _$LddKey_LeftBracketImpl() : super._();

  @override
  String toString() {
    return 'LddKey.leftBracket()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_LeftBracketImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return leftBracket();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return leftBracket?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (leftBracket != null) {
      return leftBracket();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return leftBracket(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return leftBracket?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (leftBracket != null) {
      return leftBracket(this);
    }
    return orElse();
  }
}

abstract class LddKey_LeftBracket extends LddKey {
  const factory LddKey_LeftBracket() = _$LddKey_LeftBracketImpl;
  const LddKey_LeftBracket._() : super._();
}

/// @nodoc
abstract class _$$LddKey_RightBracketImplCopyWith<$Res> {
  factory _$$LddKey_RightBracketImplCopyWith(_$LddKey_RightBracketImpl value,
          $Res Function(_$LddKey_RightBracketImpl) then) =
      __$$LddKey_RightBracketImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_RightBracketImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_RightBracketImpl>
    implements _$$LddKey_RightBracketImplCopyWith<$Res> {
  __$$LddKey_RightBracketImplCopyWithImpl(_$LddKey_RightBracketImpl _value,
      $Res Function(_$LddKey_RightBracketImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_RightBracketImpl extends LddKey_RightBracket {
  const _$LddKey_RightBracketImpl() : super._();

  @override
  String toString() {
    return 'LddKey.rightBracket()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddKey_RightBracketImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return rightBracket();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return rightBracket?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (rightBracket != null) {
      return rightBracket();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return rightBracket(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return rightBracket?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (rightBracket != null) {
      return rightBracket(this);
    }
    return orElse();
  }
}

abstract class LddKey_RightBracket extends LddKey {
  const factory LddKey_RightBracket() = _$LddKey_RightBracketImpl;
  const LddKey_RightBracket._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyAImplCopyWith<$Res> {
  factory _$$LddKey_KeyAImplCopyWith(
          _$LddKey_KeyAImpl value, $Res Function(_$LddKey_KeyAImpl) then) =
      __$$LddKey_KeyAImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyAImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyAImpl>
    implements _$$LddKey_KeyAImplCopyWith<$Res> {
  __$$LddKey_KeyAImplCopyWithImpl(
      _$LddKey_KeyAImpl _value, $Res Function(_$LddKey_KeyAImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyAImpl extends LddKey_KeyA {
  const _$LddKey_KeyAImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyA()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyAImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyA();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyA?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyA != null) {
      return keyA();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyA(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyA?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyA != null) {
      return keyA(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyA extends LddKey {
  const factory LddKey_KeyA() = _$LddKey_KeyAImpl;
  const LddKey_KeyA._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeySImplCopyWith<$Res> {
  factory _$$LddKey_KeySImplCopyWith(
          _$LddKey_KeySImpl value, $Res Function(_$LddKey_KeySImpl) then) =
      __$$LddKey_KeySImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeySImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeySImpl>
    implements _$$LddKey_KeySImplCopyWith<$Res> {
  __$$LddKey_KeySImplCopyWithImpl(
      _$LddKey_KeySImpl _value, $Res Function(_$LddKey_KeySImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeySImpl extends LddKey_KeyS {
  const _$LddKey_KeySImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyS()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeySImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyS();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyS?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyS != null) {
      return keyS();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyS(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyS?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyS != null) {
      return keyS(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyS extends LddKey {
  const factory LddKey_KeyS() = _$LddKey_KeySImpl;
  const LddKey_KeyS._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyDImplCopyWith<$Res> {
  factory _$$LddKey_KeyDImplCopyWith(
          _$LddKey_KeyDImpl value, $Res Function(_$LddKey_KeyDImpl) then) =
      __$$LddKey_KeyDImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyDImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyDImpl>
    implements _$$LddKey_KeyDImplCopyWith<$Res> {
  __$$LddKey_KeyDImplCopyWithImpl(
      _$LddKey_KeyDImpl _value, $Res Function(_$LddKey_KeyDImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyDImpl extends LddKey_KeyD {
  const _$LddKey_KeyDImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyD()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyDImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyD();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyD?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyD != null) {
      return keyD();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyD(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyD?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyD != null) {
      return keyD(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyD extends LddKey {
  const factory LddKey_KeyD() = _$LddKey_KeyDImpl;
  const LddKey_KeyD._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyFImplCopyWith<$Res> {
  factory _$$LddKey_KeyFImplCopyWith(
          _$LddKey_KeyFImpl value, $Res Function(_$LddKey_KeyFImpl) then) =
      __$$LddKey_KeyFImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyFImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyFImpl>
    implements _$$LddKey_KeyFImplCopyWith<$Res> {
  __$$LddKey_KeyFImplCopyWithImpl(
      _$LddKey_KeyFImpl _value, $Res Function(_$LddKey_KeyFImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyFImpl extends LddKey_KeyF {
  const _$LddKey_KeyFImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyF()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyFImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyF();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyF?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyF != null) {
      return keyF();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyF(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyF?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyF != null) {
      return keyF(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyF extends LddKey {
  const factory LddKey_KeyF() = _$LddKey_KeyFImpl;
  const LddKey_KeyF._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyGImplCopyWith<$Res> {
  factory _$$LddKey_KeyGImplCopyWith(
          _$LddKey_KeyGImpl value, $Res Function(_$LddKey_KeyGImpl) then) =
      __$$LddKey_KeyGImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyGImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyGImpl>
    implements _$$LddKey_KeyGImplCopyWith<$Res> {
  __$$LddKey_KeyGImplCopyWithImpl(
      _$LddKey_KeyGImpl _value, $Res Function(_$LddKey_KeyGImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyGImpl extends LddKey_KeyG {
  const _$LddKey_KeyGImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyG()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyGImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyG();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyG?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyG != null) {
      return keyG();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyG(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyG?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyG != null) {
      return keyG(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyG extends LddKey {
  const factory LddKey_KeyG() = _$LddKey_KeyGImpl;
  const LddKey_KeyG._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyHImplCopyWith<$Res> {
  factory _$$LddKey_KeyHImplCopyWith(
          _$LddKey_KeyHImpl value, $Res Function(_$LddKey_KeyHImpl) then) =
      __$$LddKey_KeyHImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyHImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyHImpl>
    implements _$$LddKey_KeyHImplCopyWith<$Res> {
  __$$LddKey_KeyHImplCopyWithImpl(
      _$LddKey_KeyHImpl _value, $Res Function(_$LddKey_KeyHImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyHImpl extends LddKey_KeyH {
  const _$LddKey_KeyHImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyH()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyHImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyH();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyH?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyH != null) {
      return keyH();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyH(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyH?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyH != null) {
      return keyH(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyH extends LddKey {
  const factory LddKey_KeyH() = _$LddKey_KeyHImpl;
  const LddKey_KeyH._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyJImplCopyWith<$Res> {
  factory _$$LddKey_KeyJImplCopyWith(
          _$LddKey_KeyJImpl value, $Res Function(_$LddKey_KeyJImpl) then) =
      __$$LddKey_KeyJImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyJImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyJImpl>
    implements _$$LddKey_KeyJImplCopyWith<$Res> {
  __$$LddKey_KeyJImplCopyWithImpl(
      _$LddKey_KeyJImpl _value, $Res Function(_$LddKey_KeyJImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyJImpl extends LddKey_KeyJ {
  const _$LddKey_KeyJImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyJ()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyJImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyJ();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyJ?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyJ != null) {
      return keyJ();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyJ(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyJ?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyJ != null) {
      return keyJ(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyJ extends LddKey {
  const factory LddKey_KeyJ() = _$LddKey_KeyJImpl;
  const LddKey_KeyJ._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyKImplCopyWith<$Res> {
  factory _$$LddKey_KeyKImplCopyWith(
          _$LddKey_KeyKImpl value, $Res Function(_$LddKey_KeyKImpl) then) =
      __$$LddKey_KeyKImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyKImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyKImpl>
    implements _$$LddKey_KeyKImplCopyWith<$Res> {
  __$$LddKey_KeyKImplCopyWithImpl(
      _$LddKey_KeyKImpl _value, $Res Function(_$LddKey_KeyKImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyKImpl extends LddKey_KeyK {
  const _$LddKey_KeyKImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyK()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyKImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyK();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyK?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyK != null) {
      return keyK();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyK(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyK?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyK != null) {
      return keyK(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyK extends LddKey {
  const factory LddKey_KeyK() = _$LddKey_KeyKImpl;
  const LddKey_KeyK._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyLImplCopyWith<$Res> {
  factory _$$LddKey_KeyLImplCopyWith(
          _$LddKey_KeyLImpl value, $Res Function(_$LddKey_KeyLImpl) then) =
      __$$LddKey_KeyLImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyLImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyLImpl>
    implements _$$LddKey_KeyLImplCopyWith<$Res> {
  __$$LddKey_KeyLImplCopyWithImpl(
      _$LddKey_KeyLImpl _value, $Res Function(_$LddKey_KeyLImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyLImpl extends LddKey_KeyL {
  const _$LddKey_KeyLImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyL()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyLImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyL();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyL?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyL != null) {
      return keyL();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyL(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyL?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyL != null) {
      return keyL(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyL extends LddKey {
  const factory LddKey_KeyL() = _$LddKey_KeyLImpl;
  const LddKey_KeyL._() : super._();
}

/// @nodoc
abstract class _$$LddKey_SemiColonImplCopyWith<$Res> {
  factory _$$LddKey_SemiColonImplCopyWith(_$LddKey_SemiColonImpl value,
          $Res Function(_$LddKey_SemiColonImpl) then) =
      __$$LddKey_SemiColonImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_SemiColonImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_SemiColonImpl>
    implements _$$LddKey_SemiColonImplCopyWith<$Res> {
  __$$LddKey_SemiColonImplCopyWithImpl(_$LddKey_SemiColonImpl _value,
      $Res Function(_$LddKey_SemiColonImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_SemiColonImpl extends LddKey_SemiColon {
  const _$LddKey_SemiColonImpl() : super._();

  @override
  String toString() {
    return 'LddKey.semiColon()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_SemiColonImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return semiColon();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return semiColon?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (semiColon != null) {
      return semiColon();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return semiColon(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return semiColon?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (semiColon != null) {
      return semiColon(this);
    }
    return orElse();
  }
}

abstract class LddKey_SemiColon extends LddKey {
  const factory LddKey_SemiColon() = _$LddKey_SemiColonImpl;
  const LddKey_SemiColon._() : super._();
}

/// @nodoc
abstract class _$$LddKey_QuoteImplCopyWith<$Res> {
  factory _$$LddKey_QuoteImplCopyWith(
          _$LddKey_QuoteImpl value, $Res Function(_$LddKey_QuoteImpl) then) =
      __$$LddKey_QuoteImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_QuoteImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_QuoteImpl>
    implements _$$LddKey_QuoteImplCopyWith<$Res> {
  __$$LddKey_QuoteImplCopyWithImpl(
      _$LddKey_QuoteImpl _value, $Res Function(_$LddKey_QuoteImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_QuoteImpl extends LddKey_Quote {
  const _$LddKey_QuoteImpl() : super._();

  @override
  String toString() {
    return 'LddKey.quote()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_QuoteImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return quote();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return quote?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (quote != null) {
      return quote();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return quote(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return quote?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (quote != null) {
      return quote(this);
    }
    return orElse();
  }
}

abstract class LddKey_Quote extends LddKey {
  const factory LddKey_Quote() = _$LddKey_QuoteImpl;
  const LddKey_Quote._() : super._();
}

/// @nodoc
abstract class _$$LddKey_BackSlashImplCopyWith<$Res> {
  factory _$$LddKey_BackSlashImplCopyWith(_$LddKey_BackSlashImpl value,
          $Res Function(_$LddKey_BackSlashImpl) then) =
      __$$LddKey_BackSlashImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_BackSlashImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_BackSlashImpl>
    implements _$$LddKey_BackSlashImplCopyWith<$Res> {
  __$$LddKey_BackSlashImplCopyWithImpl(_$LddKey_BackSlashImpl _value,
      $Res Function(_$LddKey_BackSlashImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_BackSlashImpl extends LddKey_BackSlash {
  const _$LddKey_BackSlashImpl() : super._();

  @override
  String toString() {
    return 'LddKey.backSlash()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_BackSlashImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return backSlash();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return backSlash?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (backSlash != null) {
      return backSlash();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return backSlash(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return backSlash?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (backSlash != null) {
      return backSlash(this);
    }
    return orElse();
  }
}

abstract class LddKey_BackSlash extends LddKey {
  const factory LddKey_BackSlash() = _$LddKey_BackSlashImpl;
  const LddKey_BackSlash._() : super._();
}

/// @nodoc
abstract class _$$LddKey_IntlBackslashImplCopyWith<$Res> {
  factory _$$LddKey_IntlBackslashImplCopyWith(_$LddKey_IntlBackslashImpl value,
          $Res Function(_$LddKey_IntlBackslashImpl) then) =
      __$$LddKey_IntlBackslashImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_IntlBackslashImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_IntlBackslashImpl>
    implements _$$LddKey_IntlBackslashImplCopyWith<$Res> {
  __$$LddKey_IntlBackslashImplCopyWithImpl(_$LddKey_IntlBackslashImpl _value,
      $Res Function(_$LddKey_IntlBackslashImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_IntlBackslashImpl extends LddKey_IntlBackslash {
  const _$LddKey_IntlBackslashImpl() : super._();

  @override
  String toString() {
    return 'LddKey.intlBackslash()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddKey_IntlBackslashImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return intlBackslash();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return intlBackslash?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (intlBackslash != null) {
      return intlBackslash();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return intlBackslash(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return intlBackslash?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (intlBackslash != null) {
      return intlBackslash(this);
    }
    return orElse();
  }
}

abstract class LddKey_IntlBackslash extends LddKey {
  const factory LddKey_IntlBackslash() = _$LddKey_IntlBackslashImpl;
  const LddKey_IntlBackslash._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyZImplCopyWith<$Res> {
  factory _$$LddKey_KeyZImplCopyWith(
          _$LddKey_KeyZImpl value, $Res Function(_$LddKey_KeyZImpl) then) =
      __$$LddKey_KeyZImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyZImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyZImpl>
    implements _$$LddKey_KeyZImplCopyWith<$Res> {
  __$$LddKey_KeyZImplCopyWithImpl(
      _$LddKey_KeyZImpl _value, $Res Function(_$LddKey_KeyZImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyZImpl extends LddKey_KeyZ {
  const _$LddKey_KeyZImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyZ()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyZImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyZ();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyZ?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyZ != null) {
      return keyZ();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyZ(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyZ?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyZ != null) {
      return keyZ(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyZ extends LddKey {
  const factory LddKey_KeyZ() = _$LddKey_KeyZImpl;
  const LddKey_KeyZ._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyXImplCopyWith<$Res> {
  factory _$$LddKey_KeyXImplCopyWith(
          _$LddKey_KeyXImpl value, $Res Function(_$LddKey_KeyXImpl) then) =
      __$$LddKey_KeyXImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyXImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyXImpl>
    implements _$$LddKey_KeyXImplCopyWith<$Res> {
  __$$LddKey_KeyXImplCopyWithImpl(
      _$LddKey_KeyXImpl _value, $Res Function(_$LddKey_KeyXImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyXImpl extends LddKey_KeyX {
  const _$LddKey_KeyXImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyX()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyXImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyX();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyX?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyX != null) {
      return keyX();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyX(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyX?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyX != null) {
      return keyX(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyX extends LddKey {
  const factory LddKey_KeyX() = _$LddKey_KeyXImpl;
  const LddKey_KeyX._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyCImplCopyWith<$Res> {
  factory _$$LddKey_KeyCImplCopyWith(
          _$LddKey_KeyCImpl value, $Res Function(_$LddKey_KeyCImpl) then) =
      __$$LddKey_KeyCImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyCImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyCImpl>
    implements _$$LddKey_KeyCImplCopyWith<$Res> {
  __$$LddKey_KeyCImplCopyWithImpl(
      _$LddKey_KeyCImpl _value, $Res Function(_$LddKey_KeyCImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyCImpl extends LddKey_KeyC {
  const _$LddKey_KeyCImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyC()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyCImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyC();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyC?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyC != null) {
      return keyC();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyC(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyC?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyC != null) {
      return keyC(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyC extends LddKey {
  const factory LddKey_KeyC() = _$LddKey_KeyCImpl;
  const LddKey_KeyC._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyVImplCopyWith<$Res> {
  factory _$$LddKey_KeyVImplCopyWith(
          _$LddKey_KeyVImpl value, $Res Function(_$LddKey_KeyVImpl) then) =
      __$$LddKey_KeyVImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyVImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyVImpl>
    implements _$$LddKey_KeyVImplCopyWith<$Res> {
  __$$LddKey_KeyVImplCopyWithImpl(
      _$LddKey_KeyVImpl _value, $Res Function(_$LddKey_KeyVImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyVImpl extends LddKey_KeyV {
  const _$LddKey_KeyVImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyV()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyVImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyV();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyV?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyV != null) {
      return keyV();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyV(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyV?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyV != null) {
      return keyV(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyV extends LddKey {
  const factory LddKey_KeyV() = _$LddKey_KeyVImpl;
  const LddKey_KeyV._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyBImplCopyWith<$Res> {
  factory _$$LddKey_KeyBImplCopyWith(
          _$LddKey_KeyBImpl value, $Res Function(_$LddKey_KeyBImpl) then) =
      __$$LddKey_KeyBImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyBImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyBImpl>
    implements _$$LddKey_KeyBImplCopyWith<$Res> {
  __$$LddKey_KeyBImplCopyWithImpl(
      _$LddKey_KeyBImpl _value, $Res Function(_$LddKey_KeyBImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyBImpl extends LddKey_KeyB {
  const _$LddKey_KeyBImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyB()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyBImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyB();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyB?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyB != null) {
      return keyB();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyB(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyB?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyB != null) {
      return keyB(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyB extends LddKey {
  const factory LddKey_KeyB() = _$LddKey_KeyBImpl;
  const LddKey_KeyB._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyNImplCopyWith<$Res> {
  factory _$$LddKey_KeyNImplCopyWith(
          _$LddKey_KeyNImpl value, $Res Function(_$LddKey_KeyNImpl) then) =
      __$$LddKey_KeyNImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyNImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyNImpl>
    implements _$$LddKey_KeyNImplCopyWith<$Res> {
  __$$LddKey_KeyNImplCopyWithImpl(
      _$LddKey_KeyNImpl _value, $Res Function(_$LddKey_KeyNImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyNImpl extends LddKey_KeyN {
  const _$LddKey_KeyNImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyN()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyNImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyN();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyN?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyN != null) {
      return keyN();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyN(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyN?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyN != null) {
      return keyN(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyN extends LddKey {
  const factory LddKey_KeyN() = _$LddKey_KeyNImpl;
  const LddKey_KeyN._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KeyMImplCopyWith<$Res> {
  factory _$$LddKey_KeyMImplCopyWith(
          _$LddKey_KeyMImpl value, $Res Function(_$LddKey_KeyMImpl) then) =
      __$$LddKey_KeyMImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KeyMImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KeyMImpl>
    implements _$$LddKey_KeyMImplCopyWith<$Res> {
  __$$LddKey_KeyMImplCopyWithImpl(
      _$LddKey_KeyMImpl _value, $Res Function(_$LddKey_KeyMImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KeyMImpl extends LddKey_KeyM {
  const _$LddKey_KeyMImpl() : super._();

  @override
  String toString() {
    return 'LddKey.keyM()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KeyMImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return keyM();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return keyM?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (keyM != null) {
      return keyM();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return keyM(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return keyM?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (keyM != null) {
      return keyM(this);
    }
    return orElse();
  }
}

abstract class LddKey_KeyM extends LddKey {
  const factory LddKey_KeyM() = _$LddKey_KeyMImpl;
  const LddKey_KeyM._() : super._();
}

/// @nodoc
abstract class _$$LddKey_CommaImplCopyWith<$Res> {
  factory _$$LddKey_CommaImplCopyWith(
          _$LddKey_CommaImpl value, $Res Function(_$LddKey_CommaImpl) then) =
      __$$LddKey_CommaImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_CommaImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_CommaImpl>
    implements _$$LddKey_CommaImplCopyWith<$Res> {
  __$$LddKey_CommaImplCopyWithImpl(
      _$LddKey_CommaImpl _value, $Res Function(_$LddKey_CommaImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_CommaImpl extends LddKey_Comma {
  const _$LddKey_CommaImpl() : super._();

  @override
  String toString() {
    return 'LddKey.comma()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_CommaImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return comma();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return comma?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (comma != null) {
      return comma();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return comma(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return comma?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (comma != null) {
      return comma(this);
    }
    return orElse();
  }
}

abstract class LddKey_Comma extends LddKey {
  const factory LddKey_Comma() = _$LddKey_CommaImpl;
  const LddKey_Comma._() : super._();
}

/// @nodoc
abstract class _$$LddKey_DotImplCopyWith<$Res> {
  factory _$$LddKey_DotImplCopyWith(
          _$LddKey_DotImpl value, $Res Function(_$LddKey_DotImpl) then) =
      __$$LddKey_DotImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_DotImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_DotImpl>
    implements _$$LddKey_DotImplCopyWith<$Res> {
  __$$LddKey_DotImplCopyWithImpl(
      _$LddKey_DotImpl _value, $Res Function(_$LddKey_DotImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_DotImpl extends LddKey_Dot {
  const _$LddKey_DotImpl() : super._();

  @override
  String toString() {
    return 'LddKey.dot()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_DotImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return dot();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return dot?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (dot != null) {
      return dot();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return dot(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return dot?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (dot != null) {
      return dot(this);
    }
    return orElse();
  }
}

abstract class LddKey_Dot extends LddKey {
  const factory LddKey_Dot() = _$LddKey_DotImpl;
  const LddKey_Dot._() : super._();
}

/// @nodoc
abstract class _$$LddKey_SlashImplCopyWith<$Res> {
  factory _$$LddKey_SlashImplCopyWith(
          _$LddKey_SlashImpl value, $Res Function(_$LddKey_SlashImpl) then) =
      __$$LddKey_SlashImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_SlashImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_SlashImpl>
    implements _$$LddKey_SlashImplCopyWith<$Res> {
  __$$LddKey_SlashImplCopyWithImpl(
      _$LddKey_SlashImpl _value, $Res Function(_$LddKey_SlashImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_SlashImpl extends LddKey_Slash {
  const _$LddKey_SlashImpl() : super._();

  @override
  String toString() {
    return 'LddKey.slash()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_SlashImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return slash();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return slash?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (slash != null) {
      return slash();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return slash(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return slash?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (slash != null) {
      return slash(this);
    }
    return orElse();
  }
}

abstract class LddKey_Slash extends LddKey {
  const factory LddKey_Slash() = _$LddKey_SlashImpl;
  const LddKey_Slash._() : super._();
}

/// @nodoc
abstract class _$$LddKey_InsertImplCopyWith<$Res> {
  factory _$$LddKey_InsertImplCopyWith(
          _$LddKey_InsertImpl value, $Res Function(_$LddKey_InsertImpl) then) =
      __$$LddKey_InsertImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_InsertImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_InsertImpl>
    implements _$$LddKey_InsertImplCopyWith<$Res> {
  __$$LddKey_InsertImplCopyWithImpl(
      _$LddKey_InsertImpl _value, $Res Function(_$LddKey_InsertImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_InsertImpl extends LddKey_Insert {
  const _$LddKey_InsertImpl() : super._();

  @override
  String toString() {
    return 'LddKey.insert()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_InsertImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return insert();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return insert?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (insert != null) {
      return insert();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return insert(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return insert?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (insert != null) {
      return insert(this);
    }
    return orElse();
  }
}

abstract class LddKey_Insert extends LddKey {
  const factory LddKey_Insert() = _$LddKey_InsertImpl;
  const LddKey_Insert._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KpReturnImplCopyWith<$Res> {
  factory _$$LddKey_KpReturnImplCopyWith(_$LddKey_KpReturnImpl value,
          $Res Function(_$LddKey_KpReturnImpl) then) =
      __$$LddKey_KpReturnImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KpReturnImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KpReturnImpl>
    implements _$$LddKey_KpReturnImplCopyWith<$Res> {
  __$$LddKey_KpReturnImplCopyWithImpl(
      _$LddKey_KpReturnImpl _value, $Res Function(_$LddKey_KpReturnImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KpReturnImpl extends LddKey_KpReturn {
  const _$LddKey_KpReturnImpl() : super._();

  @override
  String toString() {
    return 'LddKey.kpReturn()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KpReturnImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kpReturn();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kpReturn?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kpReturn != null) {
      return kpReturn();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kpReturn(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kpReturn?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kpReturn != null) {
      return kpReturn(this);
    }
    return orElse();
  }
}

abstract class LddKey_KpReturn extends LddKey {
  const factory LddKey_KpReturn() = _$LddKey_KpReturnImpl;
  const LddKey_KpReturn._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KpMinusImplCopyWith<$Res> {
  factory _$$LddKey_KpMinusImplCopyWith(_$LddKey_KpMinusImpl value,
          $Res Function(_$LddKey_KpMinusImpl) then) =
      __$$LddKey_KpMinusImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KpMinusImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KpMinusImpl>
    implements _$$LddKey_KpMinusImplCopyWith<$Res> {
  __$$LddKey_KpMinusImplCopyWithImpl(
      _$LddKey_KpMinusImpl _value, $Res Function(_$LddKey_KpMinusImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KpMinusImpl extends LddKey_KpMinus {
  const _$LddKey_KpMinusImpl() : super._();

  @override
  String toString() {
    return 'LddKey.kpMinus()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KpMinusImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kpMinus();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kpMinus?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kpMinus != null) {
      return kpMinus();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kpMinus(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kpMinus?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kpMinus != null) {
      return kpMinus(this);
    }
    return orElse();
  }
}

abstract class LddKey_KpMinus extends LddKey {
  const factory LddKey_KpMinus() = _$LddKey_KpMinusImpl;
  const LddKey_KpMinus._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KpPlusImplCopyWith<$Res> {
  factory _$$LddKey_KpPlusImplCopyWith(
          _$LddKey_KpPlusImpl value, $Res Function(_$LddKey_KpPlusImpl) then) =
      __$$LddKey_KpPlusImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KpPlusImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KpPlusImpl>
    implements _$$LddKey_KpPlusImplCopyWith<$Res> {
  __$$LddKey_KpPlusImplCopyWithImpl(
      _$LddKey_KpPlusImpl _value, $Res Function(_$LddKey_KpPlusImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KpPlusImpl extends LddKey_KpPlus {
  const _$LddKey_KpPlusImpl() : super._();

  @override
  String toString() {
    return 'LddKey.kpPlus()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KpPlusImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kpPlus();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kpPlus?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kpPlus != null) {
      return kpPlus();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kpPlus(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kpPlus?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kpPlus != null) {
      return kpPlus(this);
    }
    return orElse();
  }
}

abstract class LddKey_KpPlus extends LddKey {
  const factory LddKey_KpPlus() = _$LddKey_KpPlusImpl;
  const LddKey_KpPlus._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KpMultiplyImplCopyWith<$Res> {
  factory _$$LddKey_KpMultiplyImplCopyWith(_$LddKey_KpMultiplyImpl value,
          $Res Function(_$LddKey_KpMultiplyImpl) then) =
      __$$LddKey_KpMultiplyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KpMultiplyImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KpMultiplyImpl>
    implements _$$LddKey_KpMultiplyImplCopyWith<$Res> {
  __$$LddKey_KpMultiplyImplCopyWithImpl(_$LddKey_KpMultiplyImpl _value,
      $Res Function(_$LddKey_KpMultiplyImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KpMultiplyImpl extends LddKey_KpMultiply {
  const _$LddKey_KpMultiplyImpl() : super._();

  @override
  String toString() {
    return 'LddKey.kpMultiply()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KpMultiplyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kpMultiply();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kpMultiply?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kpMultiply != null) {
      return kpMultiply();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kpMultiply(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kpMultiply?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kpMultiply != null) {
      return kpMultiply(this);
    }
    return orElse();
  }
}

abstract class LddKey_KpMultiply extends LddKey {
  const factory LddKey_KpMultiply() = _$LddKey_KpMultiplyImpl;
  const LddKey_KpMultiply._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KpDivideImplCopyWith<$Res> {
  factory _$$LddKey_KpDivideImplCopyWith(_$LddKey_KpDivideImpl value,
          $Res Function(_$LddKey_KpDivideImpl) then) =
      __$$LddKey_KpDivideImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KpDivideImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KpDivideImpl>
    implements _$$LddKey_KpDivideImplCopyWith<$Res> {
  __$$LddKey_KpDivideImplCopyWithImpl(
      _$LddKey_KpDivideImpl _value, $Res Function(_$LddKey_KpDivideImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KpDivideImpl extends LddKey_KpDivide {
  const _$LddKey_KpDivideImpl() : super._();

  @override
  String toString() {
    return 'LddKey.kpDivide()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KpDivideImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kpDivide();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kpDivide?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kpDivide != null) {
      return kpDivide();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kpDivide(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kpDivide?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kpDivide != null) {
      return kpDivide(this);
    }
    return orElse();
  }
}

abstract class LddKey_KpDivide extends LddKey {
  const factory LddKey_KpDivide() = _$LddKey_KpDivideImpl;
  const LddKey_KpDivide._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp0ImplCopyWith<$Res> {
  factory _$$LddKey_Kp0ImplCopyWith(
          _$LddKey_Kp0Impl value, $Res Function(_$LddKey_Kp0Impl) then) =
      __$$LddKey_Kp0ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp0ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp0Impl>
    implements _$$LddKey_Kp0ImplCopyWith<$Res> {
  __$$LddKey_Kp0ImplCopyWithImpl(
      _$LddKey_Kp0Impl _value, $Res Function(_$LddKey_Kp0Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp0Impl extends LddKey_Kp0 {
  const _$LddKey_Kp0Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp0()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp0Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp0 != null) {
      return kp0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp0 != null) {
      return kp0(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp0 extends LddKey {
  const factory LddKey_Kp0() = _$LddKey_Kp0Impl;
  const LddKey_Kp0._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp1ImplCopyWith<$Res> {
  factory _$$LddKey_Kp1ImplCopyWith(
          _$LddKey_Kp1Impl value, $Res Function(_$LddKey_Kp1Impl) then) =
      __$$LddKey_Kp1ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp1ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp1Impl>
    implements _$$LddKey_Kp1ImplCopyWith<$Res> {
  __$$LddKey_Kp1ImplCopyWithImpl(
      _$LddKey_Kp1Impl _value, $Res Function(_$LddKey_Kp1Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp1Impl extends LddKey_Kp1 {
  const _$LddKey_Kp1Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp1()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp1Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp1();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp1?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp1 != null) {
      return kp1();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp1(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp1?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp1 != null) {
      return kp1(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp1 extends LddKey {
  const factory LddKey_Kp1() = _$LddKey_Kp1Impl;
  const LddKey_Kp1._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp2ImplCopyWith<$Res> {
  factory _$$LddKey_Kp2ImplCopyWith(
          _$LddKey_Kp2Impl value, $Res Function(_$LddKey_Kp2Impl) then) =
      __$$LddKey_Kp2ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp2ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp2Impl>
    implements _$$LddKey_Kp2ImplCopyWith<$Res> {
  __$$LddKey_Kp2ImplCopyWithImpl(
      _$LddKey_Kp2Impl _value, $Res Function(_$LddKey_Kp2Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp2Impl extends LddKey_Kp2 {
  const _$LddKey_Kp2Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp2()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp2Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp2();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp2?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp2 != null) {
      return kp2();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp2 != null) {
      return kp2(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp2 extends LddKey {
  const factory LddKey_Kp2() = _$LddKey_Kp2Impl;
  const LddKey_Kp2._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp3ImplCopyWith<$Res> {
  factory _$$LddKey_Kp3ImplCopyWith(
          _$LddKey_Kp3Impl value, $Res Function(_$LddKey_Kp3Impl) then) =
      __$$LddKey_Kp3ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp3ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp3Impl>
    implements _$$LddKey_Kp3ImplCopyWith<$Res> {
  __$$LddKey_Kp3ImplCopyWithImpl(
      _$LddKey_Kp3Impl _value, $Res Function(_$LddKey_Kp3Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp3Impl extends LddKey_Kp3 {
  const _$LddKey_Kp3Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp3()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp3Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp3();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp3?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp3 != null) {
      return kp3();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp3(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp3?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp3 != null) {
      return kp3(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp3 extends LddKey {
  const factory LddKey_Kp3() = _$LddKey_Kp3Impl;
  const LddKey_Kp3._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp4ImplCopyWith<$Res> {
  factory _$$LddKey_Kp4ImplCopyWith(
          _$LddKey_Kp4Impl value, $Res Function(_$LddKey_Kp4Impl) then) =
      __$$LddKey_Kp4ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp4ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp4Impl>
    implements _$$LddKey_Kp4ImplCopyWith<$Res> {
  __$$LddKey_Kp4ImplCopyWithImpl(
      _$LddKey_Kp4Impl _value, $Res Function(_$LddKey_Kp4Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp4Impl extends LddKey_Kp4 {
  const _$LddKey_Kp4Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp4()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp4Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp4();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp4?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp4 != null) {
      return kp4();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp4(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp4?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp4 != null) {
      return kp4(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp4 extends LddKey {
  const factory LddKey_Kp4() = _$LddKey_Kp4Impl;
  const LddKey_Kp4._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp5ImplCopyWith<$Res> {
  factory _$$LddKey_Kp5ImplCopyWith(
          _$LddKey_Kp5Impl value, $Res Function(_$LddKey_Kp5Impl) then) =
      __$$LddKey_Kp5ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp5ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp5Impl>
    implements _$$LddKey_Kp5ImplCopyWith<$Res> {
  __$$LddKey_Kp5ImplCopyWithImpl(
      _$LddKey_Kp5Impl _value, $Res Function(_$LddKey_Kp5Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp5Impl extends LddKey_Kp5 {
  const _$LddKey_Kp5Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp5()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp5Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp5();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp5?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp5 != null) {
      return kp5();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp5(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp5?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp5 != null) {
      return kp5(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp5 extends LddKey {
  const factory LddKey_Kp5() = _$LddKey_Kp5Impl;
  const LddKey_Kp5._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp6ImplCopyWith<$Res> {
  factory _$$LddKey_Kp6ImplCopyWith(
          _$LddKey_Kp6Impl value, $Res Function(_$LddKey_Kp6Impl) then) =
      __$$LddKey_Kp6ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp6ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp6Impl>
    implements _$$LddKey_Kp6ImplCopyWith<$Res> {
  __$$LddKey_Kp6ImplCopyWithImpl(
      _$LddKey_Kp6Impl _value, $Res Function(_$LddKey_Kp6Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp6Impl extends LddKey_Kp6 {
  const _$LddKey_Kp6Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp6()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp6Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp6();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp6?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp6 != null) {
      return kp6();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp6(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp6?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp6 != null) {
      return kp6(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp6 extends LddKey {
  const factory LddKey_Kp6() = _$LddKey_Kp6Impl;
  const LddKey_Kp6._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp7ImplCopyWith<$Res> {
  factory _$$LddKey_Kp7ImplCopyWith(
          _$LddKey_Kp7Impl value, $Res Function(_$LddKey_Kp7Impl) then) =
      __$$LddKey_Kp7ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp7ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp7Impl>
    implements _$$LddKey_Kp7ImplCopyWith<$Res> {
  __$$LddKey_Kp7ImplCopyWithImpl(
      _$LddKey_Kp7Impl _value, $Res Function(_$LddKey_Kp7Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp7Impl extends LddKey_Kp7 {
  const _$LddKey_Kp7Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp7()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp7Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp7();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp7?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp7 != null) {
      return kp7();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp7(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp7?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp7 != null) {
      return kp7(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp7 extends LddKey {
  const factory LddKey_Kp7() = _$LddKey_Kp7Impl;
  const LddKey_Kp7._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp8ImplCopyWith<$Res> {
  factory _$$LddKey_Kp8ImplCopyWith(
          _$LddKey_Kp8Impl value, $Res Function(_$LddKey_Kp8Impl) then) =
      __$$LddKey_Kp8ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp8ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp8Impl>
    implements _$$LddKey_Kp8ImplCopyWith<$Res> {
  __$$LddKey_Kp8ImplCopyWithImpl(
      _$LddKey_Kp8Impl _value, $Res Function(_$LddKey_Kp8Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp8Impl extends LddKey_Kp8 {
  const _$LddKey_Kp8Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp8()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp8Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp8();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp8?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp8 != null) {
      return kp8();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp8(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp8?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp8 != null) {
      return kp8(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp8 extends LddKey {
  const factory LddKey_Kp8() = _$LddKey_Kp8Impl;
  const LddKey_Kp8._() : super._();
}

/// @nodoc
abstract class _$$LddKey_Kp9ImplCopyWith<$Res> {
  factory _$$LddKey_Kp9ImplCopyWith(
          _$LddKey_Kp9Impl value, $Res Function(_$LddKey_Kp9Impl) then) =
      __$$LddKey_Kp9ImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_Kp9ImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_Kp9Impl>
    implements _$$LddKey_Kp9ImplCopyWith<$Res> {
  __$$LddKey_Kp9ImplCopyWithImpl(
      _$LddKey_Kp9Impl _value, $Res Function(_$LddKey_Kp9Impl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_Kp9Impl extends LddKey_Kp9 {
  const _$LddKey_Kp9Impl() : super._();

  @override
  String toString() {
    return 'LddKey.kp9()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_Kp9Impl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kp9();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kp9?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kp9 != null) {
      return kp9();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kp9(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kp9?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kp9 != null) {
      return kp9(this);
    }
    return orElse();
  }
}

abstract class LddKey_Kp9 extends LddKey {
  const factory LddKey_Kp9() = _$LddKey_Kp9Impl;
  const LddKey_Kp9._() : super._();
}

/// @nodoc
abstract class _$$LddKey_KpDeleteImplCopyWith<$Res> {
  factory _$$LddKey_KpDeleteImplCopyWith(_$LddKey_KpDeleteImpl value,
          $Res Function(_$LddKey_KpDeleteImpl) then) =
      __$$LddKey_KpDeleteImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_KpDeleteImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_KpDeleteImpl>
    implements _$$LddKey_KpDeleteImplCopyWith<$Res> {
  __$$LddKey_KpDeleteImplCopyWithImpl(
      _$LddKey_KpDeleteImpl _value, $Res Function(_$LddKey_KpDeleteImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_KpDeleteImpl extends LddKey_KpDelete {
  const _$LddKey_KpDeleteImpl() : super._();

  @override
  String toString() {
    return 'LddKey.kpDelete()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_KpDeleteImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return kpDelete();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return kpDelete?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (kpDelete != null) {
      return kpDelete();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return kpDelete(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return kpDelete?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (kpDelete != null) {
      return kpDelete(this);
    }
    return orElse();
  }
}

abstract class LddKey_KpDelete extends LddKey {
  const factory LddKey_KpDelete() = _$LddKey_KpDeleteImpl;
  const LddKey_KpDelete._() : super._();
}

/// @nodoc
abstract class _$$LddKey_FunctionImplCopyWith<$Res> {
  factory _$$LddKey_FunctionImplCopyWith(_$LddKey_FunctionImpl value,
          $Res Function(_$LddKey_FunctionImpl) then) =
      __$$LddKey_FunctionImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$LddKey_FunctionImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_FunctionImpl>
    implements _$$LddKey_FunctionImplCopyWith<$Res> {
  __$$LddKey_FunctionImplCopyWithImpl(
      _$LddKey_FunctionImpl _value, $Res Function(_$LddKey_FunctionImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
}

/// @nodoc

class _$LddKey_FunctionImpl extends LddKey_Function {
  const _$LddKey_FunctionImpl() : super._();

  @override
  String toString() {
    return 'LddKey.function()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is _$LddKey_FunctionImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return function();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return function?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (function != null) {
      return function();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return function(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return function?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (function != null) {
      return function(this);
    }
    return orElse();
  }
}

abstract class LddKey_Function extends LddKey {
  const factory LddKey_Function() = _$LddKey_FunctionImpl;
  const LddKey_Function._() : super._();
}

/// @nodoc
abstract class _$$LddKey_UnknownImplCopyWith<$Res> {
  factory _$$LddKey_UnknownImplCopyWith(_$LddKey_UnknownImpl value,
          $Res Function(_$LddKey_UnknownImpl) then) =
      __$$LddKey_UnknownImplCopyWithImpl<$Res>;
  @useResult
  $Res call({int field0});
}

/// @nodoc
class __$$LddKey_UnknownImplCopyWithImpl<$Res>
    extends _$LddKeyCopyWithImpl<$Res, _$LddKey_UnknownImpl>
    implements _$$LddKey_UnknownImplCopyWith<$Res> {
  __$$LddKey_UnknownImplCopyWithImpl(
      _$LddKey_UnknownImpl _value, $Res Function(_$LddKey_UnknownImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$LddKey_UnknownImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as int,
    ));
  }
}

/// @nodoc

class _$LddKey_UnknownImpl extends LddKey_Unknown {
  const _$LddKey_UnknownImpl(this.field0) : super._();

  @override
  final int field0;

  @override
  String toString() {
    return 'LddKey.unknown(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddKey_UnknownImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddKey_UnknownImplCopyWith<_$LddKey_UnknownImpl> get copyWith =>
      __$$LddKey_UnknownImplCopyWithImpl<_$LddKey_UnknownImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() alt,
    required TResult Function() altGr,
    required TResult Function() backspace,
    required TResult Function() capsLock,
    required TResult Function() controlLeft,
    required TResult Function() controlRight,
    required TResult Function() delete,
    required TResult Function() downArrow,
    required TResult Function() end,
    required TResult Function() escape,
    required TResult Function() f1,
    required TResult Function() f10,
    required TResult Function() f11,
    required TResult Function() f12,
    required TResult Function() f2,
    required TResult Function() f3,
    required TResult Function() f4,
    required TResult Function() f5,
    required TResult Function() f6,
    required TResult Function() f7,
    required TResult Function() f8,
    required TResult Function() f9,
    required TResult Function() home,
    required TResult Function() leftArrow,
    required TResult Function() metaLeft,
    required TResult Function() metaRight,
    required TResult Function() pageDown,
    required TResult Function() pageUp,
    required TResult Function() return_,
    required TResult Function() rightArrow,
    required TResult Function() shiftLeft,
    required TResult Function() shiftRight,
    required TResult Function() space,
    required TResult Function() tab,
    required TResult Function() upArrow,
    required TResult Function() printScreen,
    required TResult Function() scrollLock,
    required TResult Function() pause,
    required TResult Function() numLock,
    required TResult Function() backQuote,
    required TResult Function() num1,
    required TResult Function() num2,
    required TResult Function() num3,
    required TResult Function() num4,
    required TResult Function() num5,
    required TResult Function() num6,
    required TResult Function() num7,
    required TResult Function() num8,
    required TResult Function() num9,
    required TResult Function() num0,
    required TResult Function() minus,
    required TResult Function() equal,
    required TResult Function() keyQ,
    required TResult Function() keyW,
    required TResult Function() keyE,
    required TResult Function() keyR,
    required TResult Function() keyT,
    required TResult Function() keyY,
    required TResult Function() keyU,
    required TResult Function() keyI,
    required TResult Function() keyO,
    required TResult Function() keyP,
    required TResult Function() leftBracket,
    required TResult Function() rightBracket,
    required TResult Function() keyA,
    required TResult Function() keyS,
    required TResult Function() keyD,
    required TResult Function() keyF,
    required TResult Function() keyG,
    required TResult Function() keyH,
    required TResult Function() keyJ,
    required TResult Function() keyK,
    required TResult Function() keyL,
    required TResult Function() semiColon,
    required TResult Function() quote,
    required TResult Function() backSlash,
    required TResult Function() intlBackslash,
    required TResult Function() keyZ,
    required TResult Function() keyX,
    required TResult Function() keyC,
    required TResult Function() keyV,
    required TResult Function() keyB,
    required TResult Function() keyN,
    required TResult Function() keyM,
    required TResult Function() comma,
    required TResult Function() dot,
    required TResult Function() slash,
    required TResult Function() insert,
    required TResult Function() kpReturn,
    required TResult Function() kpMinus,
    required TResult Function() kpPlus,
    required TResult Function() kpMultiply,
    required TResult Function() kpDivide,
    required TResult Function() kp0,
    required TResult Function() kp1,
    required TResult Function() kp2,
    required TResult Function() kp3,
    required TResult Function() kp4,
    required TResult Function() kp5,
    required TResult Function() kp6,
    required TResult Function() kp7,
    required TResult Function() kp8,
    required TResult Function() kp9,
    required TResult Function() kpDelete,
    required TResult Function() function,
    required TResult Function(int field0) unknown,
  }) {
    return unknown(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? alt,
    TResult? Function()? altGr,
    TResult? Function()? backspace,
    TResult? Function()? capsLock,
    TResult? Function()? controlLeft,
    TResult? Function()? controlRight,
    TResult? Function()? delete,
    TResult? Function()? downArrow,
    TResult? Function()? end,
    TResult? Function()? escape,
    TResult? Function()? f1,
    TResult? Function()? f10,
    TResult? Function()? f11,
    TResult? Function()? f12,
    TResult? Function()? f2,
    TResult? Function()? f3,
    TResult? Function()? f4,
    TResult? Function()? f5,
    TResult? Function()? f6,
    TResult? Function()? f7,
    TResult? Function()? f8,
    TResult? Function()? f9,
    TResult? Function()? home,
    TResult? Function()? leftArrow,
    TResult? Function()? metaLeft,
    TResult? Function()? metaRight,
    TResult? Function()? pageDown,
    TResult? Function()? pageUp,
    TResult? Function()? return_,
    TResult? Function()? rightArrow,
    TResult? Function()? shiftLeft,
    TResult? Function()? shiftRight,
    TResult? Function()? space,
    TResult? Function()? tab,
    TResult? Function()? upArrow,
    TResult? Function()? printScreen,
    TResult? Function()? scrollLock,
    TResult? Function()? pause,
    TResult? Function()? numLock,
    TResult? Function()? backQuote,
    TResult? Function()? num1,
    TResult? Function()? num2,
    TResult? Function()? num3,
    TResult? Function()? num4,
    TResult? Function()? num5,
    TResult? Function()? num6,
    TResult? Function()? num7,
    TResult? Function()? num8,
    TResult? Function()? num9,
    TResult? Function()? num0,
    TResult? Function()? minus,
    TResult? Function()? equal,
    TResult? Function()? keyQ,
    TResult? Function()? keyW,
    TResult? Function()? keyE,
    TResult? Function()? keyR,
    TResult? Function()? keyT,
    TResult? Function()? keyY,
    TResult? Function()? keyU,
    TResult? Function()? keyI,
    TResult? Function()? keyO,
    TResult? Function()? keyP,
    TResult? Function()? leftBracket,
    TResult? Function()? rightBracket,
    TResult? Function()? keyA,
    TResult? Function()? keyS,
    TResult? Function()? keyD,
    TResult? Function()? keyF,
    TResult? Function()? keyG,
    TResult? Function()? keyH,
    TResult? Function()? keyJ,
    TResult? Function()? keyK,
    TResult? Function()? keyL,
    TResult? Function()? semiColon,
    TResult? Function()? quote,
    TResult? Function()? backSlash,
    TResult? Function()? intlBackslash,
    TResult? Function()? keyZ,
    TResult? Function()? keyX,
    TResult? Function()? keyC,
    TResult? Function()? keyV,
    TResult? Function()? keyB,
    TResult? Function()? keyN,
    TResult? Function()? keyM,
    TResult? Function()? comma,
    TResult? Function()? dot,
    TResult? Function()? slash,
    TResult? Function()? insert,
    TResult? Function()? kpReturn,
    TResult? Function()? kpMinus,
    TResult? Function()? kpPlus,
    TResult? Function()? kpMultiply,
    TResult? Function()? kpDivide,
    TResult? Function()? kp0,
    TResult? Function()? kp1,
    TResult? Function()? kp2,
    TResult? Function()? kp3,
    TResult? Function()? kp4,
    TResult? Function()? kp5,
    TResult? Function()? kp6,
    TResult? Function()? kp7,
    TResult? Function()? kp8,
    TResult? Function()? kp9,
    TResult? Function()? kpDelete,
    TResult? Function()? function,
    TResult? Function(int field0)? unknown,
  }) {
    return unknown?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? alt,
    TResult Function()? altGr,
    TResult Function()? backspace,
    TResult Function()? capsLock,
    TResult Function()? controlLeft,
    TResult Function()? controlRight,
    TResult Function()? delete,
    TResult Function()? downArrow,
    TResult Function()? end,
    TResult Function()? escape,
    TResult Function()? f1,
    TResult Function()? f10,
    TResult Function()? f11,
    TResult Function()? f12,
    TResult Function()? f2,
    TResult Function()? f3,
    TResult Function()? f4,
    TResult Function()? f5,
    TResult Function()? f6,
    TResult Function()? f7,
    TResult Function()? f8,
    TResult Function()? f9,
    TResult Function()? home,
    TResult Function()? leftArrow,
    TResult Function()? metaLeft,
    TResult Function()? metaRight,
    TResult Function()? pageDown,
    TResult Function()? pageUp,
    TResult Function()? return_,
    TResult Function()? rightArrow,
    TResult Function()? shiftLeft,
    TResult Function()? shiftRight,
    TResult Function()? space,
    TResult Function()? tab,
    TResult Function()? upArrow,
    TResult Function()? printScreen,
    TResult Function()? scrollLock,
    TResult Function()? pause,
    TResult Function()? numLock,
    TResult Function()? backQuote,
    TResult Function()? num1,
    TResult Function()? num2,
    TResult Function()? num3,
    TResult Function()? num4,
    TResult Function()? num5,
    TResult Function()? num6,
    TResult Function()? num7,
    TResult Function()? num8,
    TResult Function()? num9,
    TResult Function()? num0,
    TResult Function()? minus,
    TResult Function()? equal,
    TResult Function()? keyQ,
    TResult Function()? keyW,
    TResult Function()? keyE,
    TResult Function()? keyR,
    TResult Function()? keyT,
    TResult Function()? keyY,
    TResult Function()? keyU,
    TResult Function()? keyI,
    TResult Function()? keyO,
    TResult Function()? keyP,
    TResult Function()? leftBracket,
    TResult Function()? rightBracket,
    TResult Function()? keyA,
    TResult Function()? keyS,
    TResult Function()? keyD,
    TResult Function()? keyF,
    TResult Function()? keyG,
    TResult Function()? keyH,
    TResult Function()? keyJ,
    TResult Function()? keyK,
    TResult Function()? keyL,
    TResult Function()? semiColon,
    TResult Function()? quote,
    TResult Function()? backSlash,
    TResult Function()? intlBackslash,
    TResult Function()? keyZ,
    TResult Function()? keyX,
    TResult Function()? keyC,
    TResult Function()? keyV,
    TResult Function()? keyB,
    TResult Function()? keyN,
    TResult Function()? keyM,
    TResult Function()? comma,
    TResult Function()? dot,
    TResult Function()? slash,
    TResult Function()? insert,
    TResult Function()? kpReturn,
    TResult Function()? kpMinus,
    TResult Function()? kpPlus,
    TResult Function()? kpMultiply,
    TResult Function()? kpDivide,
    TResult Function()? kp0,
    TResult Function()? kp1,
    TResult Function()? kp2,
    TResult Function()? kp3,
    TResult Function()? kp4,
    TResult Function()? kp5,
    TResult Function()? kp6,
    TResult Function()? kp7,
    TResult Function()? kp8,
    TResult Function()? kp9,
    TResult Function()? kpDelete,
    TResult Function()? function,
    TResult Function(int field0)? unknown,
    required TResult orElse(),
  }) {
    if (unknown != null) {
      return unknown(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKey_Alt value) alt,
    required TResult Function(LddKey_AltGr value) altGr,
    required TResult Function(LddKey_Backspace value) backspace,
    required TResult Function(LddKey_CapsLock value) capsLock,
    required TResult Function(LddKey_ControlLeft value) controlLeft,
    required TResult Function(LddKey_ControlRight value) controlRight,
    required TResult Function(LddKey_Delete value) delete,
    required TResult Function(LddKey_DownArrow value) downArrow,
    required TResult Function(LddKey_End value) end,
    required TResult Function(LddKey_Escape value) escape,
    required TResult Function(LddKey_F1 value) f1,
    required TResult Function(LddKey_F10 value) f10,
    required TResult Function(LddKey_F11 value) f11,
    required TResult Function(LddKey_F12 value) f12,
    required TResult Function(LddKey_F2 value) f2,
    required TResult Function(LddKey_F3 value) f3,
    required TResult Function(LddKey_F4 value) f4,
    required TResult Function(LddKey_F5 value) f5,
    required TResult Function(LddKey_F6 value) f6,
    required TResult Function(LddKey_F7 value) f7,
    required TResult Function(LddKey_F8 value) f8,
    required TResult Function(LddKey_F9 value) f9,
    required TResult Function(LddKey_Home value) home,
    required TResult Function(LddKey_LeftArrow value) leftArrow,
    required TResult Function(LddKey_MetaLeft value) metaLeft,
    required TResult Function(LddKey_MetaRight value) metaRight,
    required TResult Function(LddKey_PageDown value) pageDown,
    required TResult Function(LddKey_PageUp value) pageUp,
    required TResult Function(LddKey_Return value) return_,
    required TResult Function(LddKey_RightArrow value) rightArrow,
    required TResult Function(LddKey_ShiftLeft value) shiftLeft,
    required TResult Function(LddKey_ShiftRight value) shiftRight,
    required TResult Function(LddKey_Space value) space,
    required TResult Function(LddKey_Tab value) tab,
    required TResult Function(LddKey_UpArrow value) upArrow,
    required TResult Function(LddKey_PrintScreen value) printScreen,
    required TResult Function(LddKey_ScrollLock value) scrollLock,
    required TResult Function(LddKey_Pause value) pause,
    required TResult Function(LddKey_NumLock value) numLock,
    required TResult Function(LddKey_BackQuote value) backQuote,
    required TResult Function(LddKey_Num1 value) num1,
    required TResult Function(LddKey_Num2 value) num2,
    required TResult Function(LddKey_Num3 value) num3,
    required TResult Function(LddKey_Num4 value) num4,
    required TResult Function(LddKey_Num5 value) num5,
    required TResult Function(LddKey_Num6 value) num6,
    required TResult Function(LddKey_Num7 value) num7,
    required TResult Function(LddKey_Num8 value) num8,
    required TResult Function(LddKey_Num9 value) num9,
    required TResult Function(LddKey_Num0 value) num0,
    required TResult Function(LddKey_Minus value) minus,
    required TResult Function(LddKey_Equal value) equal,
    required TResult Function(LddKey_KeyQ value) keyQ,
    required TResult Function(LddKey_KeyW value) keyW,
    required TResult Function(LddKey_KeyE value) keyE,
    required TResult Function(LddKey_KeyR value) keyR,
    required TResult Function(LddKey_KeyT value) keyT,
    required TResult Function(LddKey_KeyY value) keyY,
    required TResult Function(LddKey_KeyU value) keyU,
    required TResult Function(LddKey_KeyI value) keyI,
    required TResult Function(LddKey_KeyO value) keyO,
    required TResult Function(LddKey_KeyP value) keyP,
    required TResult Function(LddKey_LeftBracket value) leftBracket,
    required TResult Function(LddKey_RightBracket value) rightBracket,
    required TResult Function(LddKey_KeyA value) keyA,
    required TResult Function(LddKey_KeyS value) keyS,
    required TResult Function(LddKey_KeyD value) keyD,
    required TResult Function(LddKey_KeyF value) keyF,
    required TResult Function(LddKey_KeyG value) keyG,
    required TResult Function(LddKey_KeyH value) keyH,
    required TResult Function(LddKey_KeyJ value) keyJ,
    required TResult Function(LddKey_KeyK value) keyK,
    required TResult Function(LddKey_KeyL value) keyL,
    required TResult Function(LddKey_SemiColon value) semiColon,
    required TResult Function(LddKey_Quote value) quote,
    required TResult Function(LddKey_BackSlash value) backSlash,
    required TResult Function(LddKey_IntlBackslash value) intlBackslash,
    required TResult Function(LddKey_KeyZ value) keyZ,
    required TResult Function(LddKey_KeyX value) keyX,
    required TResult Function(LddKey_KeyC value) keyC,
    required TResult Function(LddKey_KeyV value) keyV,
    required TResult Function(LddKey_KeyB value) keyB,
    required TResult Function(LddKey_KeyN value) keyN,
    required TResult Function(LddKey_KeyM value) keyM,
    required TResult Function(LddKey_Comma value) comma,
    required TResult Function(LddKey_Dot value) dot,
    required TResult Function(LddKey_Slash value) slash,
    required TResult Function(LddKey_Insert value) insert,
    required TResult Function(LddKey_KpReturn value) kpReturn,
    required TResult Function(LddKey_KpMinus value) kpMinus,
    required TResult Function(LddKey_KpPlus value) kpPlus,
    required TResult Function(LddKey_KpMultiply value) kpMultiply,
    required TResult Function(LddKey_KpDivide value) kpDivide,
    required TResult Function(LddKey_Kp0 value) kp0,
    required TResult Function(LddKey_Kp1 value) kp1,
    required TResult Function(LddKey_Kp2 value) kp2,
    required TResult Function(LddKey_Kp3 value) kp3,
    required TResult Function(LddKey_Kp4 value) kp4,
    required TResult Function(LddKey_Kp5 value) kp5,
    required TResult Function(LddKey_Kp6 value) kp6,
    required TResult Function(LddKey_Kp7 value) kp7,
    required TResult Function(LddKey_Kp8 value) kp8,
    required TResult Function(LddKey_Kp9 value) kp9,
    required TResult Function(LddKey_KpDelete value) kpDelete,
    required TResult Function(LddKey_Function value) function,
    required TResult Function(LddKey_Unknown value) unknown,
  }) {
    return unknown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKey_Alt value)? alt,
    TResult? Function(LddKey_AltGr value)? altGr,
    TResult? Function(LddKey_Backspace value)? backspace,
    TResult? Function(LddKey_CapsLock value)? capsLock,
    TResult? Function(LddKey_ControlLeft value)? controlLeft,
    TResult? Function(LddKey_ControlRight value)? controlRight,
    TResult? Function(LddKey_Delete value)? delete,
    TResult? Function(LddKey_DownArrow value)? downArrow,
    TResult? Function(LddKey_End value)? end,
    TResult? Function(LddKey_Escape value)? escape,
    TResult? Function(LddKey_F1 value)? f1,
    TResult? Function(LddKey_F10 value)? f10,
    TResult? Function(LddKey_F11 value)? f11,
    TResult? Function(LddKey_F12 value)? f12,
    TResult? Function(LddKey_F2 value)? f2,
    TResult? Function(LddKey_F3 value)? f3,
    TResult? Function(LddKey_F4 value)? f4,
    TResult? Function(LddKey_F5 value)? f5,
    TResult? Function(LddKey_F6 value)? f6,
    TResult? Function(LddKey_F7 value)? f7,
    TResult? Function(LddKey_F8 value)? f8,
    TResult? Function(LddKey_F9 value)? f9,
    TResult? Function(LddKey_Home value)? home,
    TResult? Function(LddKey_LeftArrow value)? leftArrow,
    TResult? Function(LddKey_MetaLeft value)? metaLeft,
    TResult? Function(LddKey_MetaRight value)? metaRight,
    TResult? Function(LddKey_PageDown value)? pageDown,
    TResult? Function(LddKey_PageUp value)? pageUp,
    TResult? Function(LddKey_Return value)? return_,
    TResult? Function(LddKey_RightArrow value)? rightArrow,
    TResult? Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult? Function(LddKey_ShiftRight value)? shiftRight,
    TResult? Function(LddKey_Space value)? space,
    TResult? Function(LddKey_Tab value)? tab,
    TResult? Function(LddKey_UpArrow value)? upArrow,
    TResult? Function(LddKey_PrintScreen value)? printScreen,
    TResult? Function(LddKey_ScrollLock value)? scrollLock,
    TResult? Function(LddKey_Pause value)? pause,
    TResult? Function(LddKey_NumLock value)? numLock,
    TResult? Function(LddKey_BackQuote value)? backQuote,
    TResult? Function(LddKey_Num1 value)? num1,
    TResult? Function(LddKey_Num2 value)? num2,
    TResult? Function(LddKey_Num3 value)? num3,
    TResult? Function(LddKey_Num4 value)? num4,
    TResult? Function(LddKey_Num5 value)? num5,
    TResult? Function(LddKey_Num6 value)? num6,
    TResult? Function(LddKey_Num7 value)? num7,
    TResult? Function(LddKey_Num8 value)? num8,
    TResult? Function(LddKey_Num9 value)? num9,
    TResult? Function(LddKey_Num0 value)? num0,
    TResult? Function(LddKey_Minus value)? minus,
    TResult? Function(LddKey_Equal value)? equal,
    TResult? Function(LddKey_KeyQ value)? keyQ,
    TResult? Function(LddKey_KeyW value)? keyW,
    TResult? Function(LddKey_KeyE value)? keyE,
    TResult? Function(LddKey_KeyR value)? keyR,
    TResult? Function(LddKey_KeyT value)? keyT,
    TResult? Function(LddKey_KeyY value)? keyY,
    TResult? Function(LddKey_KeyU value)? keyU,
    TResult? Function(LddKey_KeyI value)? keyI,
    TResult? Function(LddKey_KeyO value)? keyO,
    TResult? Function(LddKey_KeyP value)? keyP,
    TResult? Function(LddKey_LeftBracket value)? leftBracket,
    TResult? Function(LddKey_RightBracket value)? rightBracket,
    TResult? Function(LddKey_KeyA value)? keyA,
    TResult? Function(LddKey_KeyS value)? keyS,
    TResult? Function(LddKey_KeyD value)? keyD,
    TResult? Function(LddKey_KeyF value)? keyF,
    TResult? Function(LddKey_KeyG value)? keyG,
    TResult? Function(LddKey_KeyH value)? keyH,
    TResult? Function(LddKey_KeyJ value)? keyJ,
    TResult? Function(LddKey_KeyK value)? keyK,
    TResult? Function(LddKey_KeyL value)? keyL,
    TResult? Function(LddKey_SemiColon value)? semiColon,
    TResult? Function(LddKey_Quote value)? quote,
    TResult? Function(LddKey_BackSlash value)? backSlash,
    TResult? Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult? Function(LddKey_KeyZ value)? keyZ,
    TResult? Function(LddKey_KeyX value)? keyX,
    TResult? Function(LddKey_KeyC value)? keyC,
    TResult? Function(LddKey_KeyV value)? keyV,
    TResult? Function(LddKey_KeyB value)? keyB,
    TResult? Function(LddKey_KeyN value)? keyN,
    TResult? Function(LddKey_KeyM value)? keyM,
    TResult? Function(LddKey_Comma value)? comma,
    TResult? Function(LddKey_Dot value)? dot,
    TResult? Function(LddKey_Slash value)? slash,
    TResult? Function(LddKey_Insert value)? insert,
    TResult? Function(LddKey_KpReturn value)? kpReturn,
    TResult? Function(LddKey_KpMinus value)? kpMinus,
    TResult? Function(LddKey_KpPlus value)? kpPlus,
    TResult? Function(LddKey_KpMultiply value)? kpMultiply,
    TResult? Function(LddKey_KpDivide value)? kpDivide,
    TResult? Function(LddKey_Kp0 value)? kp0,
    TResult? Function(LddKey_Kp1 value)? kp1,
    TResult? Function(LddKey_Kp2 value)? kp2,
    TResult? Function(LddKey_Kp3 value)? kp3,
    TResult? Function(LddKey_Kp4 value)? kp4,
    TResult? Function(LddKey_Kp5 value)? kp5,
    TResult? Function(LddKey_Kp6 value)? kp6,
    TResult? Function(LddKey_Kp7 value)? kp7,
    TResult? Function(LddKey_Kp8 value)? kp8,
    TResult? Function(LddKey_Kp9 value)? kp9,
    TResult? Function(LddKey_KpDelete value)? kpDelete,
    TResult? Function(LddKey_Function value)? function,
    TResult? Function(LddKey_Unknown value)? unknown,
  }) {
    return unknown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKey_Alt value)? alt,
    TResult Function(LddKey_AltGr value)? altGr,
    TResult Function(LddKey_Backspace value)? backspace,
    TResult Function(LddKey_CapsLock value)? capsLock,
    TResult Function(LddKey_ControlLeft value)? controlLeft,
    TResult Function(LddKey_ControlRight value)? controlRight,
    TResult Function(LddKey_Delete value)? delete,
    TResult Function(LddKey_DownArrow value)? downArrow,
    TResult Function(LddKey_End value)? end,
    TResult Function(LddKey_Escape value)? escape,
    TResult Function(LddKey_F1 value)? f1,
    TResult Function(LddKey_F10 value)? f10,
    TResult Function(LddKey_F11 value)? f11,
    TResult Function(LddKey_F12 value)? f12,
    TResult Function(LddKey_F2 value)? f2,
    TResult Function(LddKey_F3 value)? f3,
    TResult Function(LddKey_F4 value)? f4,
    TResult Function(LddKey_F5 value)? f5,
    TResult Function(LddKey_F6 value)? f6,
    TResult Function(LddKey_F7 value)? f7,
    TResult Function(LddKey_F8 value)? f8,
    TResult Function(LddKey_F9 value)? f9,
    TResult Function(LddKey_Home value)? home,
    TResult Function(LddKey_LeftArrow value)? leftArrow,
    TResult Function(LddKey_MetaLeft value)? metaLeft,
    TResult Function(LddKey_MetaRight value)? metaRight,
    TResult Function(LddKey_PageDown value)? pageDown,
    TResult Function(LddKey_PageUp value)? pageUp,
    TResult Function(LddKey_Return value)? return_,
    TResult Function(LddKey_RightArrow value)? rightArrow,
    TResult Function(LddKey_ShiftLeft value)? shiftLeft,
    TResult Function(LddKey_ShiftRight value)? shiftRight,
    TResult Function(LddKey_Space value)? space,
    TResult Function(LddKey_Tab value)? tab,
    TResult Function(LddKey_UpArrow value)? upArrow,
    TResult Function(LddKey_PrintScreen value)? printScreen,
    TResult Function(LddKey_ScrollLock value)? scrollLock,
    TResult Function(LddKey_Pause value)? pause,
    TResult Function(LddKey_NumLock value)? numLock,
    TResult Function(LddKey_BackQuote value)? backQuote,
    TResult Function(LddKey_Num1 value)? num1,
    TResult Function(LddKey_Num2 value)? num2,
    TResult Function(LddKey_Num3 value)? num3,
    TResult Function(LddKey_Num4 value)? num4,
    TResult Function(LddKey_Num5 value)? num5,
    TResult Function(LddKey_Num6 value)? num6,
    TResult Function(LddKey_Num7 value)? num7,
    TResult Function(LddKey_Num8 value)? num8,
    TResult Function(LddKey_Num9 value)? num9,
    TResult Function(LddKey_Num0 value)? num0,
    TResult Function(LddKey_Minus value)? minus,
    TResult Function(LddKey_Equal value)? equal,
    TResult Function(LddKey_KeyQ value)? keyQ,
    TResult Function(LddKey_KeyW value)? keyW,
    TResult Function(LddKey_KeyE value)? keyE,
    TResult Function(LddKey_KeyR value)? keyR,
    TResult Function(LddKey_KeyT value)? keyT,
    TResult Function(LddKey_KeyY value)? keyY,
    TResult Function(LddKey_KeyU value)? keyU,
    TResult Function(LddKey_KeyI value)? keyI,
    TResult Function(LddKey_KeyO value)? keyO,
    TResult Function(LddKey_KeyP value)? keyP,
    TResult Function(LddKey_LeftBracket value)? leftBracket,
    TResult Function(LddKey_RightBracket value)? rightBracket,
    TResult Function(LddKey_KeyA value)? keyA,
    TResult Function(LddKey_KeyS value)? keyS,
    TResult Function(LddKey_KeyD value)? keyD,
    TResult Function(LddKey_KeyF value)? keyF,
    TResult Function(LddKey_KeyG value)? keyG,
    TResult Function(LddKey_KeyH value)? keyH,
    TResult Function(LddKey_KeyJ value)? keyJ,
    TResult Function(LddKey_KeyK value)? keyK,
    TResult Function(LddKey_KeyL value)? keyL,
    TResult Function(LddKey_SemiColon value)? semiColon,
    TResult Function(LddKey_Quote value)? quote,
    TResult Function(LddKey_BackSlash value)? backSlash,
    TResult Function(LddKey_IntlBackslash value)? intlBackslash,
    TResult Function(LddKey_KeyZ value)? keyZ,
    TResult Function(LddKey_KeyX value)? keyX,
    TResult Function(LddKey_KeyC value)? keyC,
    TResult Function(LddKey_KeyV value)? keyV,
    TResult Function(LddKey_KeyB value)? keyB,
    TResult Function(LddKey_KeyN value)? keyN,
    TResult Function(LddKey_KeyM value)? keyM,
    TResult Function(LddKey_Comma value)? comma,
    TResult Function(LddKey_Dot value)? dot,
    TResult Function(LddKey_Slash value)? slash,
    TResult Function(LddKey_Insert value)? insert,
    TResult Function(LddKey_KpReturn value)? kpReturn,
    TResult Function(LddKey_KpMinus value)? kpMinus,
    TResult Function(LddKey_KpPlus value)? kpPlus,
    TResult Function(LddKey_KpMultiply value)? kpMultiply,
    TResult Function(LddKey_KpDivide value)? kpDivide,
    TResult Function(LddKey_Kp0 value)? kp0,
    TResult Function(LddKey_Kp1 value)? kp1,
    TResult Function(LddKey_Kp2 value)? kp2,
    TResult Function(LddKey_Kp3 value)? kp3,
    TResult Function(LddKey_Kp4 value)? kp4,
    TResult Function(LddKey_Kp5 value)? kp5,
    TResult Function(LddKey_Kp6 value)? kp6,
    TResult Function(LddKey_Kp7 value)? kp7,
    TResult Function(LddKey_Kp8 value)? kp8,
    TResult Function(LddKey_Kp9 value)? kp9,
    TResult Function(LddKey_KpDelete value)? kpDelete,
    TResult Function(LddKey_Function value)? function,
    TResult Function(LddKey_Unknown value)? unknown,
    required TResult orElse(),
  }) {
    if (unknown != null) {
      return unknown(this);
    }
    return orElse();
  }
}

abstract class LddKey_Unknown extends LddKey {
  const factory LddKey_Unknown(final int field0) = _$LddKey_UnknownImpl;
  const LddKey_Unknown._() : super._();

  int get field0;

  /// Create a copy of LddKey
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddKey_UnknownImplCopyWith<_$LddKey_UnknownImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
mixin _$LddKeyboardValue {
  Object get field0 => throw _privateConstructorUsedError;
  BigInt get field1 => throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String field0, BigInt field1) scanGunValue,
    required TResult Function(LddEvent field0, BigInt field1) keyboardValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String field0, BigInt field1)? scanGunValue,
    TResult? Function(LddEvent field0, BigInt field1)? keyboardValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String field0, BigInt field1)? scanGunValue,
    TResult Function(LddEvent field0, BigInt field1)? keyboardValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKeyboardValue_ScanGunValue value) scanGunValue,
    required TResult Function(LddKeyboardValue_KeyboardValue value)
        keyboardValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKeyboardValue_ScanGunValue value)? scanGunValue,
    TResult? Function(LddKeyboardValue_KeyboardValue value)? keyboardValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKeyboardValue_ScanGunValue value)? scanGunValue,
    TResult Function(LddKeyboardValue_KeyboardValue value)? keyboardValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  $LddKeyboardValueCopyWith<LddKeyboardValue> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $LddKeyboardValueCopyWith<$Res> {
  factory $LddKeyboardValueCopyWith(
          LddKeyboardValue value, $Res Function(LddKeyboardValue) then) =
      _$LddKeyboardValueCopyWithImpl<$Res, LddKeyboardValue>;
  @useResult
  $Res call({BigInt field1});
}

/// @nodoc
class _$LddKeyboardValueCopyWithImpl<$Res, $Val extends LddKeyboardValue>
    implements $LddKeyboardValueCopyWith<$Res> {
  _$LddKeyboardValueCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field1 = null,
  }) {
    return _then(_value.copyWith(
      field1: null == field1
          ? _value.field1
          : field1 // ignore: cast_nullable_to_non_nullable
              as BigInt,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$LddKeyboardValue_ScanGunValueImplCopyWith<$Res>
    implements $LddKeyboardValueCopyWith<$Res> {
  factory _$$LddKeyboardValue_ScanGunValueImplCopyWith(
          _$LddKeyboardValue_ScanGunValueImpl value,
          $Res Function(_$LddKeyboardValue_ScanGunValueImpl) then) =
      __$$LddKeyboardValue_ScanGunValueImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({String field0, BigInt field1});
}

/// @nodoc
class __$$LddKeyboardValue_ScanGunValueImplCopyWithImpl<$Res>
    extends _$LddKeyboardValueCopyWithImpl<$Res,
        _$LddKeyboardValue_ScanGunValueImpl>
    implements _$$LddKeyboardValue_ScanGunValueImplCopyWith<$Res> {
  __$$LddKeyboardValue_ScanGunValueImplCopyWithImpl(
      _$LddKeyboardValue_ScanGunValueImpl _value,
      $Res Function(_$LddKeyboardValue_ScanGunValueImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
    Object? field1 = null,
  }) {
    return _then(_$LddKeyboardValue_ScanGunValueImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
      null == field1
          ? _value.field1
          : field1 // ignore: cast_nullable_to_non_nullable
              as BigInt,
    ));
  }
}

/// @nodoc

class _$LddKeyboardValue_ScanGunValueImpl
    extends LddKeyboardValue_ScanGunValue {
  const _$LddKeyboardValue_ScanGunValueImpl(this.field0, this.field1)
      : super._();

  @override
  final String field0;
  @override
  final BigInt field1;

  @override
  String toString() {
    return 'LddKeyboardValue.scanGunValue(field0: $field0, field1: $field1)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddKeyboardValue_ScanGunValueImpl &&
            (identical(other.field0, field0) || other.field0 == field0) &&
            (identical(other.field1, field1) || other.field1 == field1));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0, field1);

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddKeyboardValue_ScanGunValueImplCopyWith<
          _$LddKeyboardValue_ScanGunValueImpl>
      get copyWith => __$$LddKeyboardValue_ScanGunValueImplCopyWithImpl<
          _$LddKeyboardValue_ScanGunValueImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String field0, BigInt field1) scanGunValue,
    required TResult Function(LddEvent field0, BigInt field1) keyboardValue,
  }) {
    return scanGunValue(field0, field1);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String field0, BigInt field1)? scanGunValue,
    TResult? Function(LddEvent field0, BigInt field1)? keyboardValue,
  }) {
    return scanGunValue?.call(field0, field1);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String field0, BigInt field1)? scanGunValue,
    TResult Function(LddEvent field0, BigInt field1)? keyboardValue,
    required TResult orElse(),
  }) {
    if (scanGunValue != null) {
      return scanGunValue(field0, field1);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKeyboardValue_ScanGunValue value) scanGunValue,
    required TResult Function(LddKeyboardValue_KeyboardValue value)
        keyboardValue,
  }) {
    return scanGunValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKeyboardValue_ScanGunValue value)? scanGunValue,
    TResult? Function(LddKeyboardValue_KeyboardValue value)? keyboardValue,
  }) {
    return scanGunValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKeyboardValue_ScanGunValue value)? scanGunValue,
    TResult Function(LddKeyboardValue_KeyboardValue value)? keyboardValue,
    required TResult orElse(),
  }) {
    if (scanGunValue != null) {
      return scanGunValue(this);
    }
    return orElse();
  }
}

abstract class LddKeyboardValue_ScanGunValue extends LddKeyboardValue {
  const factory LddKeyboardValue_ScanGunValue(
          final String field0, final BigInt field1) =
      _$LddKeyboardValue_ScanGunValueImpl;
  const LddKeyboardValue_ScanGunValue._() : super._();

  @override
  String get field0;
  @override
  BigInt get field1;

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddKeyboardValue_ScanGunValueImplCopyWith<
          _$LddKeyboardValue_ScanGunValueImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$LddKeyboardValue_KeyboardValueImplCopyWith<$Res>
    implements $LddKeyboardValueCopyWith<$Res> {
  factory _$$LddKeyboardValue_KeyboardValueImplCopyWith(
          _$LddKeyboardValue_KeyboardValueImpl value,
          $Res Function(_$LddKeyboardValue_KeyboardValueImpl) then) =
      __$$LddKeyboardValue_KeyboardValueImplCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call({LddEvent field0, BigInt field1});
}

/// @nodoc
class __$$LddKeyboardValue_KeyboardValueImplCopyWithImpl<$Res>
    extends _$LddKeyboardValueCopyWithImpl<$Res,
        _$LddKeyboardValue_KeyboardValueImpl>
    implements _$$LddKeyboardValue_KeyboardValueImplCopyWith<$Res> {
  __$$LddKeyboardValue_KeyboardValueImplCopyWithImpl(
      _$LddKeyboardValue_KeyboardValueImpl _value,
      $Res Function(_$LddKeyboardValue_KeyboardValueImpl) _then)
      : super(_value, _then);

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
    Object? field1 = null,
  }) {
    return _then(_$LddKeyboardValue_KeyboardValueImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as LddEvent,
      null == field1
          ? _value.field1
          : field1 // ignore: cast_nullable_to_non_nullable
              as BigInt,
    ));
  }
}

/// @nodoc

class _$LddKeyboardValue_KeyboardValueImpl
    extends LddKeyboardValue_KeyboardValue {
  const _$LddKeyboardValue_KeyboardValueImpl(this.field0, this.field1)
      : super._();

  @override
  final LddEvent field0;
  @override
  final BigInt field1;

  @override
  String toString() {
    return 'LddKeyboardValue.keyboardValue(field0: $field0, field1: $field1)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$LddKeyboardValue_KeyboardValueImpl &&
            (identical(other.field0, field0) || other.field0 == field0) &&
            (identical(other.field1, field1) || other.field1 == field1));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0, field1);

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @JsonKey(includeFromJson: false, includeToJson: false)
  @override
  @pragma('vm:prefer-inline')
  _$$LddKeyboardValue_KeyboardValueImplCopyWith<
          _$LddKeyboardValue_KeyboardValueImpl>
      get copyWith => __$$LddKeyboardValue_KeyboardValueImplCopyWithImpl<
          _$LddKeyboardValue_KeyboardValueImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(String field0, BigInt field1) scanGunValue,
    required TResult Function(LddEvent field0, BigInt field1) keyboardValue,
  }) {
    return keyboardValue(field0, field1);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(String field0, BigInt field1)? scanGunValue,
    TResult? Function(LddEvent field0, BigInt field1)? keyboardValue,
  }) {
    return keyboardValue?.call(field0, field1);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(String field0, BigInt field1)? scanGunValue,
    TResult Function(LddEvent field0, BigInt field1)? keyboardValue,
    required TResult orElse(),
  }) {
    if (keyboardValue != null) {
      return keyboardValue(field0, field1);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(LddKeyboardValue_ScanGunValue value) scanGunValue,
    required TResult Function(LddKeyboardValue_KeyboardValue value)
        keyboardValue,
  }) {
    return keyboardValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(LddKeyboardValue_ScanGunValue value)? scanGunValue,
    TResult? Function(LddKeyboardValue_KeyboardValue value)? keyboardValue,
  }) {
    return keyboardValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(LddKeyboardValue_ScanGunValue value)? scanGunValue,
    TResult Function(LddKeyboardValue_KeyboardValue value)? keyboardValue,
    required TResult orElse(),
  }) {
    if (keyboardValue != null) {
      return keyboardValue(this);
    }
    return orElse();
  }
}

abstract class LddKeyboardValue_KeyboardValue extends LddKeyboardValue {
  const factory LddKeyboardValue_KeyboardValue(
          final LddEvent field0, final BigInt field1) =
      _$LddKeyboardValue_KeyboardValueImpl;
  const LddKeyboardValue_KeyboardValue._() : super._();

  @override
  LddEvent get field0;
  @override
  BigInt get field1;

  /// Create a copy of LddKeyboardValue
  /// with the given fields replaced by the non-null parameter values.
  @override
  @JsonKey(includeFromJson: false, includeToJson: false)
  _$$LddKeyboardValue_KeyboardValueImplCopyWith<
          _$LddKeyboardValue_KeyboardValueImpl>
      get copyWith => throw _privateConstructorUsedError;
}
